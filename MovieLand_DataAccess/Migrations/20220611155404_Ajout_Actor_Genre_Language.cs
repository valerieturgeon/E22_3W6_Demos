using Microsoft.EntityFrameworkCore.Migrations;

namespace MovieLand_DataAccess.Migrations
{
    public partial class Ajout_Actor_Genre_Language : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Actors",
                columns: table => new
                {
                    ActorId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Profile = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Actors", x => x.ActorId);
                });

            migrationBuilder.CreateTable(
                name: "Genres",
                columns: table => new
                {
                    GenreId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Genres", x => x.GenreId);
                });

            migrationBuilder.CreateTable(
                name: "Languages",
                columns: table => new
                {
                    LanguageId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Languages", x => x.LanguageId);
                });

            migrationBuilder.CreateTable(
                name: "MovieCast",
                columns: table => new
                {
                    MovieId = table.Column<int>(type: "int", nullable: false),
                    ActorId = table.Column<int>(type: "int", nullable: false),
                    Character = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Order = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MovieCast", x => new { x.MovieId, x.ActorId });
                    table.ForeignKey(
                        name: "FK_MovieCast_Actors_ActorId",
                        column: x => x.ActorId,
                        principalTable: "Actors",
                        principalColumn: "ActorId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_MovieCast_Movies_MovieId",
                        column: x => x.MovieId,
                        principalTable: "Movies",
                        principalColumn: "MovieId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MovieGenre",
                columns: table => new
                {
                    MovieId = table.Column<int>(type: "int", nullable: false),
                    GenreId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MovieGenre", x => new { x.MovieId, x.GenreId });
                    table.ForeignKey(
                        name: "FK_MovieGenre_Genres_GenreId",
                        column: x => x.GenreId,
                        principalTable: "Genres",
                        principalColumn: "GenreId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_MovieGenre_Movies_MovieId",
                        column: x => x.MovieId,
                        principalTable: "Movies",
                        principalColumn: "MovieId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MovieLanguage",
                columns: table => new
                {
                    MovieId = table.Column<int>(type: "int", nullable: false),
                    LanguageId = table.Column<int>(type: "int", nullable: false),
                    IsOriginalLanguage = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MovieLanguage", x => new { x.MovieId, x.LanguageId });
                    table.ForeignKey(
                        name: "FK_MovieLanguage_Languages_LanguageId",
                        column: x => x.LanguageId,
                        principalTable: "Languages",
                        principalColumn: "LanguageId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_MovieLanguage_Movies_MovieId",
                        column: x => x.MovieId,
                        principalTable: "Movies",
                        principalColumn: "MovieId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 1, "Hume Cronyn", "/2Tdh3cbagprrV0wN6q96u8wTTNJ.jpg" },
                    { 367, "Bryce Dallas Howard", "/qQX1rhQaJ1G8eMG2RknFKiXfNRc.jpg" },
                    { 366, "Élodie Yung", "/aMMI81o7VcNGMapjL90f2VKiOD8.jpg" },
                    { 365, "Antje Traue", "/oDp1CxuY5hF2yXXoz599Ikc04kU.jpg" },
                    { 364, "Jake Gyllenhaal", "/oA6fp6SQBQQWZEzn4NfY3E8mJhV.jpg" },
                    { 363, "Yuri Kolokolnikov", "/vUKweo4yAQzGDVENj5iCndXY5yT.jpg" },
                    { 362, "Ryan Gosling", "/lyUyVARQKhGxaxy0FbPJCQRpiaW.jpg" },
                    { 361, "Ben Foster", "/4le1PMWTGp7y2IBmZEIOHfE3HAB.jpg" },
                    { 360, "Natasha Rothwell", "/x5KdL3QoS4YuozVpfuPsu3MLwwf.jpg" },
                    { 359, "Adeel Akhtar", "/nNdjhe4t5CSqcFGCa7ERe40OW2o.jpg" },
                    { 358, "Michelle Williams", "/sXTP6wlqIDz1tDGLU3DFbklSTpq.jpg" },
                    { 357, "Tika Sumpter", "/92gI9NcF6p7wTdeFN71YFRe1wyE.jpg" },
                    { 356, "Jonathan Cohen", "/qkSGTG4cfkTRQrmxaaKVqQKOgKR.jpg" },
                    { 355, "Jordana Brewster", "/8VzFsSfT7NnMGyH5JQBQdTxDHcO.jpg" },
                    { 354, "Noomi Rapace", "/vdlUULsiwxEgxTwxn3vVQqmolcx.jpg" },
                    { 353, "Adam Brody", "/2iKOiwAXR1cgPVFHOGpNTpVyVvC.jpg" },
                    { 352, "Nate Parker", "/4pVNF77SkB2Jw6MQtoicjpnIVSN.jpg" },
                    { 351, "Anthony Mackie", "/eZSIDrtTzhvabyjrmIITQLsjx8h.jpg" },
                    { 350, "Madeleine West", "/buJ3lN6iDQBuuP9FwGgpT9WQxLt.jpg" },
                    { 349, "Rose Byrne", "/4oQWCLK7gd6RNKF0WJipJo7TyFP.jpg" },
                    { 348, "Kevin Hart", "/7OwsFfoxNGIfWwSmdORyB7v8XNj.jpg" },
                    { 347, "James Ransone", "/rjwH3Coemh29qy9bU5jJa0tjoLx.jpg" },
                    { 346, "Rosario Dawson", "/1mm7JGHIUX3GRRGXEV9QCzsI0ao.jpg" },
                    { 345, "Luke Evans", "/qUkYJcrDc4M0LHNYASs30luFvw0.jpg" },
                    { 344, "Jennifer Morrison", "/i6dkHIME0BOPhbcPESHZND3vmtk.jpg" },
                    { 343, "Veronica Ngo", "/uvmZVmCbo7d9Zpc9cNEYvqhFKpU.jpg" },
                    { 342, "Rosamund Pike", "/8ObNklHDi2hjdz0ayzJFB9jtqzm.jpg" },
                    { 341, "Jay Chou", "/9wkudnDDSHC0fSTRIrsoEphGuOM.jpg" },
                    { 340, "Tyrese Gibson", "/eHhIFk7HOElgFCaD4igtAgn41kA.jpg" },
                    { 339, "Rachel McAdams", "/fxeMrZswIPIWhipvdRrHOVuPlQY.jpg" },
                    { 368, "Matthias Schweighöfer", "/i4c5JjvC5EpecZbp4J96mFmtm0Z.jpg" },
                    { 369, "Julia Stiles", "/vuXlmsJd8tec6D9ljv9AcpxeaxM.jpg" },
                    { 370, "Laura Birn", "/np48qwpVDkio5Z97lbloVl3omiC.jpg" },
                    { 371, "Boyd Holbrook", "/zKYA9XfK5jtCpBgTr62jm4xVS79.jpg" },
                    { 401, "Alona Tal", "/kYRu965Jt11NWWbJ9XtSUOhTkUx.jpg" },
                    { 400, "Felicity Jones", "/35KdWSfTldNEdsn4MUGFIRoxJEu.jpg" },
                    { 399, "Jesse Eisenberg", "/yYhwWRcxDHTn63gSEF1vnDAD7cD.jpg" },
                    { 398, "Donald Glover", "/nilV7NtnML6PDa9VrvxD79F85K9.jpg" },
                    { 397, "Andrew Garfield", "/beO5YvbTjrr5yy8hW26KVDMSr35.jpg" },
                    { 396, "Henry Cavill", "/hErUwonrQgY5Y7RfxOfv8Fq11MB.jpg" },
                    { 395, "Lupita Nyong'o", "/y40Wu1T742kynOqtwXASc5Qgm49.jpg" },
                    { 394, "Iliza Shlesinger", "/cLbuKIJOmojOL0z9nLcJhWzq8Ge.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 393, "Mélanie Laurent", "/i99ogEo4gQyanCmHWYYoS6hsUqL.jpg" },
                    { 392, "Marwan Kenzari", "/66903sgNtyzHN0Mi3D88UYgbH86.jpg" },
                    { 391, "Gabriel Luna", "/mYVDObiZuw7DmsBHsLfZIAn37Tw.jpg" },
                    { 390, "Riz Ahmed", "/1uP9RaX7BGVx7XGTEmwObBJJzsC.jpg" },
                    { 389, "Emma Booth", "/9mxCaOgYPeXN2DtbjaKHIreiZNS.jpg" },
                    { 388, "Joey Ansah", "/c45UKk6xo7Y3RMSTzjuTmqlklqh.jpg" },
                    { 338, "Michelle Rodriguez", "/xSvkVrLz6xas1mCeOR9i4QtmhnQ.jpg" },
                    { 387, "Dan Stevens", "/fFsgginZKH527o38ZfdDxuzx7Ew.jpg" },
                    { 385, "Martin Starr", "/cxGxr0S1jnvOpOHyZDYXrg2GHju.jpg" },
                    { 384, "Lizzy Caplan", "/xOLXlzpSJExsBlKroCyCNGhzQEU.jpg" },
                    { 383, "Gabriella Wright", "/gRu9HvASbIceRNvQU43pvKyYc0l.jpg" },
                    { 382, "Lee Majdoub", "/vpF3R2YRCGHseGevmDAhftmOPkO.jpg" },
                    { 381, "Kirsten Dunst", "/sFYHUU1gWd57pttD8732tkBsXV5.jpg" },
                    { 380, "Brian Tyree Henry", "/u0wSg450FIFXPcqjLA7QAlgUlgw.jpg" },
                    { 379, "Jenny Slate", "/aqH8MCnT3O5Od3OfZR8LClSP7UB.jpg" },
                    { 378, "Adam Pally", "/yY13PEaVbPoXT5MkitVxTfdAZnU.jpg" },
                    { 377, "Luis Gerardo Méndez", "/5Qdy6Jp80VRoaOiqMskiusHO5uU.jpg" },
                    { 376, "Jessica Biel", "/pylhADLUY9Hi1f16ClevS60FieA.jpg" },
                    { 375, "Natalie Lisinska", "/pjF0OpAQNJKuxmxHeTOOepFXBrk.jpg" },
                    { 374, "Michelle Dockery", "/pgPJGf2wAPgoC6Bp5PBJYQV7IVt.jpg" },
                    { 373, "Griff Furst", "/kC7MQMSMockWSHpIkAFJp4LwPI8.jpg" },
                    { 372, "Ben Schwartz", "/5vV52TSEIhe4ZZLWwv3i7nfv8we.jpg" },
                    { 386, "Abbie Cornish", "/AgIA8uPnwySIbqaPjr5jEXwZbS.jpg" },
                    { 402, "Trent Garrett", "/r0Z0INNm3Z9NWcwv6dbkhuGTptu.jpg" },
                    { 337, "Topher Grace", "/tgF5PeH4xwz32FjB80n5aFiuHX.jpg" },
                    { 335, "Ethan Embry", "/feYnMlTejbHfkhD1akVVXKWG0u1.jpg" },
                    { 300, "Ida Darvish", "/u0IusSD8zHVfhW4Uz7YjismbskA.jpg" },
                    { 299, "Rodrigo Santoro", "/d3MaF9SPHDn2PMYHuqdnO0Csik6.jpg" },
                    { 298, "Taika Waititi", "/zCLBXGo5BS2e27srDBa5WpRnKul.jpg" },
                    { 297, "Charlize Theron", "/lG7JQ7zsGTKl5EnfSlDW1sXk0NC.jpg" },
                    { 296, "Tobey Maguire", "/ncF4HivY2W6SQW5dEP3N3I4mfT0.jpg" },
                    { 295, "Linda Cardellini", "/bcycvynDprC1rrhBNrnBjn5uOUd.jpg" },
                    { 294, "Angelina Jolie", "/k3W1XXddDOH2zibPkNotIh5amHo.jpg" },
                    { 293, "Christina Hendricks", "/vO59Bd8881Iz2DjfbTvq1vHTpW8.jpg" },
                    { 292, "Raúl Méndez", "/pcVbkGQIudCH2I9aQBC58cKOuYI.jpg" },
                    { 291, "Bradley Cooper", "/pLD2XvxqHueLWOuqXoFngJU3A5H.jpg" },
                    { 290, "Thure Lindhardt", "/lDkRe6dlQoiehjay8pEP2WLU4qG.jpg" },
                    { 289, "Stipe Erceg", "/mqOqZfzp1QpOHrkPB9VNvVZ3Nqn.jpg" },
                    { 288, "Burn Gorman", "/31IjmuR91tpXdBMI714ap1MAVLv.jpg" },
                    { 287, "Darren Goldstein", "/47QXKYavXBB9CDXnptBwxsgEHvz.jpg" },
                    { 286, "Amy Adams", "/1h2r2VTpoFb5QefAaBYYQgQzL9z.jpg" },
                    { 285, "Michael Shannon", "/6mMczfjM8CiS1WuBOgo5Xom1TcR.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 283, "Kirsty Mitchell", "/sZmpltTVexFkHlvFHgQkfWSafnZ.jpg" },
                    { 282, "Omar Metwally", "/2VGHH1yFCyZCM4h4Y65ynutDFtb.jpg" },
                    { 281, "David Harbour", "/chPekukMF5SNnW6b22NbYPqAStr.jpg" },
                    { 280, "Rhys Darby", "/5EeCqhmrlw61CFuipknRPyyuC3C.jpg" },
                    { 279, "Amber Valletta", "/8QrEYhULn1JuCo34Au79cowHaQn.jpg" },
                    { 278, "Michael Weston", "/asS6TYplpuAdpuB0Evj65M42bWZ.jpg" },
                    { 277, "Eva Röse", "/qAmGsTn8lEqCEsd56thJt9vNwDA.jpg" },
                    { 276, "James Marsden", "/mk142GG0saiSXALY6V4wWcmPROW.jpg" },
                    { 275, "Paul Walker", "/gOnKt6xCdVSiK0aYmmmnEx7s5rX.jpg" },
                    { 274, "Kate Beckinsale", "/pRNpPfvZy4bePDgQzQFrxTVIUfa.jpg" },
                    { 273, "Nikolaj Lie Kaas", "/oc0wzmAJILh21Gf0cVOwPTA8fMf.jpg" },
                    { 272, "Bokeem Woodbine", "/pnPyA5pJn94zUzuLWTNkGBNZxza.jpg" },
                    { 271, "Ólafur Darri Ólafsson", "/qNs7mUyqWFRocJ4X22Zy1fAhL4x.jpg" },
                    { 301, "Johnny Whitworth", "/5ducV5iEAbFsKHk2HMyBBYgOmhw.jpg" },
                    { 302, "Isla Fisher", "/zNKTzzuyMYaCGEZKhwhqV1K8ffo.jpg" },
                    { 303, "Tony Jaa", "/AdN11kgJeKgjyWPRTGSHjSPzG7N.jpg" },
                    { 304, "Freddie Prinze Jr.", "/8V9yNBjCNRBKROyjCLKLJGcCBdG.jpg" },
                    { 334, "Malin Åkerman", "/u38qRcCAiO3SZdFKJKx3fncDyef.jpg" },
                    { 333, "James Franco", "/pgEe68922Ba20vAwPmAFQFm8U0c.jpg" },
                    { 332, "Anamaria Marinca", "/9AMasU3BbXfncjXkmKOSxoqJaCf.jpg" },
                    { 331, "Rory Kinnear", "/8aEABMeHXOozwE5DrMxUlCM9mpG.jpg" },
                    { 330, "Paul Anderson", "/nds5rTBZvJ4rEsP4N6OaoEgQDkW.jpg" },
                    { 329, "Omar Sy", "/laNZay6AfEzvEvY1NUH9UFiSD0a.jpg" },
                    { 328, "January Jones", "/9HYdabnECNzUPG9QcO9qLnZZG8h.jpg" },
                    { 327, "Matthias Schoenaerts", "/estZOBtDX860B1nbFRtNXt7SbHn.jpg" },
                    { 326, "Reid Scott", "/kBAeDUDA7XJRXFLGNALlpE5d3lA.jpg" },
                    { 325, "Scoot McNairy", "/oP2LJEqupxVZ2XdEW1lN5Q5LF3M.jpg" },
                    { 324, "Tom Hardy", "/sGMA6pA2D6X0gun49igJT3piHs3.jpg" },
                    { 323, "Ludacris", "/dd4oZILcqzPbcM0R4SXefcAREIV.jpg" },
                    { 322, "Kelly Reilly", "/gof8bWW9E7MH30GpvA97PwGiIuu.jpg" },
                    { 321, "Chiwetel Ejiofor", "/kq5DDnqqofoRI0t6ddtRlsJnNPT.jpg" },
                    { 336, "Zoe Saldana", "/aGb3JzoumA89gRFwbJYAxFm5Qdk.jpg" },
                    { 320, "Liv Tyler", "/9IlcL0MWSNz8YLzqSooRHCQD4Dt.jpg" },
                    { 318, "Kerry Washington", "/hCi43gRO7zfv3Mu8X1bpqtloyHT.jpg" },
                    { 317, "Freya Stafford", "/yHisdwlraY7scY5fkYFO5XiXc6F.jpg" },
                    { 316, "Joe Manganiello", "/mTdACmitdrwor0Nrv5sr0u123vZ.jpg" },
                    { 315, "Ryan Reynolds", "/4SYTH5FdB0dAORV98Nwg3llgVnY.jpg" },
                    { 314, "Sala Baker", "/zSWNRVboxLJ3bhj7YBIS76HPCrC.jpg" },
                    { 313, "Enuka Okuma", "/giNRBe2NrmptqL2o5l8JzN4WDIm.jpg" },
                    { 312, "Audrey Tautou", "/d1HVrV8zXy1FJVptmOCkHWG8Jf2.jpg" },
                    { 311, "Diane Kruger", "/aScr0aXsTzLIO6bkB82YUuYj4PT.jpg" },
                    { 310, "Anna Friel", "/dOSGWxahmdfCvcYgjiisaTzGKCK.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 309, "Colin Farrell", "/vVqrAhZpojAtp874wBaaFt5T4dN.jpg" },
                    { 308, "Violante Placido", "/qVs8LdHIU2E5RlSuSr4MK0zyf7B.jpg" },
                    { 307, "Michelle Monaghan", "/jB47BoGdudHELszn9ZAZqnnUy8N.jpg" },
                    { 306, "Corey Stoll", "/etqmosIyf1xePKpi3i6rHJCm9GE.jpg" },
                    { 305, "Erik Griffin", "/1YxirENyYn87iteQDQNiIZvkT.jpg" },
                    { 319, "Sarah Michelle Gellar", "/sCpCv2ldnrAQN9NVQOE6PYxG8TN.jpg" },
                    { 270, "Anson Mount", "/qU6GGvUqwFMbfK2Bk7Gg7dK1KD6.jpg" },
                    { 403, "Amy De Bhrún", "/cN5ep9TcNHmJcK6uO0wMUtvgIOx.jpg" },
                    { 405, "Gina Rodriguez", "/4EMA7VtkMobfGpswEclm65xC9s8.jpg" },
                    { 501, "Fergus Riordan", "" },
                    { 500, "Roger Barclay", "/edEAhoLoGMte94lPfwNCKyyFRFW.jpg" },
                    { 499, "Olivier Schneider", "" },
                    { 498, "Nick Thomas-Webster", "" },
                    { 497, "John Tui", "/2jIc9M5kl2GmK8fZtbtUr2s1jkS.jpg" },
                    { 496, "Aymen Hamdouchi", "/nLd7tahohZO7pQP1EzRgCdQZ4Xn.jpg" },
                    { 495, "Danielle Carter", "/5zZDYQs3pIs4XjSztjIjhDloLlv.jpg" },
                    { 494, "Nadia Townsend", "/38HQL7ILGNo7SbhqrVtF3Yvg7Gb.jpg" },
                    { 493, "Christopher Kirby", "/8EctNOglWXvubkUulK29bCOItxM.jpg" },
                    { 492, "Liza Colón-Zayas", "/m3xmgR6QVFc30UK9RomG6LFNiNb.jpg" },
                    { 491, "Ritchie Montgomery", "/5uAXhfX10ImQYl47I04yrL3zQAk.jpg" },
                    { 490, "T.V. Carpio", "/ctPSNG71wSESSUT5z066nIT1PoF.jpg" },
                    { 489, "Marie-Françoise Audollent", "/FCRifU7IVpP21Yfm43ifxK51Wg.jpg" },
                    { 488, "Adrienne Pickering", "/2JW5YKOQBRcjaI57X1CGXXLPME4.jpg" },
                    { 487, "Alexa Benedetti", "/v7MiUYllp5O92jlb65kjiqWaex3.jpg" },
                    { 486, "Rachael Huntley", "/uiXBco6GPl3CR4NqduCsl2Gcah7.jpg" },
                    { 485, "Walker Scobell", "/8hLsKlvCZxhSPgxOyLgg2Z0n5uK.jpg" },
                    { 484, "Lucas Jaye", "/zj4CFCNqDcGZopRhraGNHNykB59.jpg" },
                    { 483, "Ariana Greenblatt", "/yuN7vjgZYkPIlSJWAnpdCyJm5Nt.jpg" },
                    { 482, "Braxton Bjerken", "/3fQA8q4L7320p3pqWq1rVLXqQsa.jpg" },
                    { 481, "Mckenna Grace", "/jQLBM6ErQnvU8QqNvW8KKF9y8N0.jpg" },
                    { 480, "Maxwell Simkins", "/dYlqVpxLTBgGvLaENtNktyKMqw6.jpg" },
                    { 479, "Millie Bobby Brown", "/yzfxLMcBMusKzZp9f1Z9Ags8WML.jpg" },
                    { 478, "Max Charles", "/5urZfWb7TUkuy53IcVvm0lNleGj.jpg" },
                    { 477, "Louis Partridge", "/8Mkb5ce8SAA6kaYisKmrpCAT8Tj.jpg" },
                    { 476, "Cree Cicchino", "/emNMxPc9ABEmmWsxSVWOMonrhzW.jpg" },
                    { 475, "Sadie Stanley", "/tBijc7eYGJCPVS818rAcJJwAWBr.jpg" },
                    { 474, "Angourie Rice", "/d5acxDB06gtV5OUW20EtAShZnQp.jpg" },
                    { 473, "Shyann McClure", "" },
                    { 502, "Jeanine Serralles", "/2Z1maLxjI1z8uJVcp92ZIcLacob.jpg" },
                    { 503, "Christopher Sommers", "/e86eKSvV5gr1qihDfG8Lpya04OC.jpg" },
                    { 504, "Tomás Álvarez", "" },
                    { 505, "Eric Carte", "/h06zIHhepxWkoFOZNyX8rKBZ7J4.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 535, "Kasra Wong", "/yjzYzjt2MDNupAhVNH47K0A1KT6.jpg" },
                    { 534, "Ferran Fernández", "" },
                    { 533, "Melody Nosipho Niemann", "/obObtfheG5NNDu63RDrifA1aAR.jpg" },
                    { 532, "Eliana Su'a", "/wgvCqvKhuoKJ5CLJNHCqC7tbDNZ.jpg" },
                    { 531, "Kristofer Kamiyasu", "/iMLlQPCIAJeE5PKCAf3v4AOKWKp.jpg" },
                    { 530, "Matthew Murphy Karges", "/qObcl6oNKqb3ljuAyumaQZWXzSA.jpg" },
                    { 529, "Mariah Bozeman", "/kEkIliZSn3GlAIMJqtjzHV73bCo.jpg" },
                    { 528, "Guz Khan", "/pY2ND9eZhUtPuRBZPEoM1BRPZBd.jpg" },
                    { 527, "Stephanie Gil", "/avOGwIv0hKVWhQ9cRkiBmmRDsCp.jpg" },
                    { 526, "Lori Pelenise Tuisano", "/jVHQK0iUQul8ivwlbuaYJCBol7T.jpg" },
                    { 525, "Donald Sales", "/6wSOvzVyxY2F6gX3SG6XqsX6eQh.jpg" },
                    { 524, "Dan Bradford", "/yPUG9ktvrzH96YFbNxQRGOeKIC6.jpg" },
                    { 523, "Malcolm C. Murray", "/1TkiBdgPv0AmKFXyB1dINzd4GJ8.jpg" },
                    { 522, "Alessandro Grimaldi", "" },
                    { 472, "Fred Hechinger", "/dLFy4KFR556j4Z9WstsslhJCwyZ.jpg" },
                    { 521, "Paolo Antonio Simioni", "/txiARaVCd1D2GQQeOI0MgMsX12X.jpg" },
                    { 519, "Adam Lazarus", "/9N2DxYi4QTRampPXVmi8RnIqPsv.jpg" },
                    { 518, "Alice McMillan", "" },
                    { 517, "Dylan Devonald Smith", "/4QOuiYFTtYhIkWi1KiizWOnFLoI.jpg" },
                    { 516, "Scott Shepherd", "/leLuJUpF6uySDWPS7FwHpObAMs4.jpg" },
                    { 515, "Dotan Bonen", "" },
                    { 514, "Lukas Loughran", "/vDOn1ywqKsp2umz5QmSAdjeW20d.jpg" },
                    { 513, "Sope Aluko", "/dNfAM8jNgwa1693nuplfjp70Ls4.jpg" },
                    { 512, "Joe Kennard", "/x2JuSpBrKWNtNTFZWUpslhtA9Hl.jpg" },
                    { 511, "Harry Aspinwall", "/iVMVXhSfTMW5HnsgOQCT3Hfoyys.jpg" },
                    { 510, "Remy Hii", "/l6K5S3Pnxtj9JBz7qPhiHEekGpg.jpg" },
                    { 509, "David Lennie", "" },
                    { 508, "Milton Barnes", "/qCP3CVoEQmLopSHuHLOUooP1RDY.jpg" },
                    { 507, "Adam David Thompson", "/9Dr7qJ5wCzTp7KpA83lsO9YyBPh.jpg" },
                    { 506, "Elise Jansen", "/mif9nOzN7uRmUr5M0OrijnlBms3.jpg" },
                    { 520, "Helen Daniels", "" },
                    { 404, "Natalie Martinez", "/cFn0OI9c8aypx20hm3XpTqkrMEx.jpg" },
                    { 471, "Cameron Boyce", "/dtONrW7kQ9DFyduL0W1YPawkGYs.jpg" },
                    { 469, "Chandler Canterbury", "/flfh9tLEiERwZFQPlcShejI1TS8.jpg" },
                    { 434, "Alicia Vikander", "/9pmHTbXeRxUF51jJKthmHI49u9z.jpg" },
                    { 433, "Justine Wachsberger", "/dk3pJgeZJT8QhoPY5QCVjERRwgz.jpg" },
                    { 432, "Vanessa Kirby", "/aB0o6r5msso6tCXTuVgKVO4wRqg.jpg" },
                    { 431, "Alex Mallari Jr.", "/7rypBTal9cGPhExAzLpYSALJ3Px.jpg" },
                    { 430, "Susan Wokoma", "/uzcYkQ1KWlNEOrwnklGH8C3qB1Y.jpg" },
                    { 429, "Sarah Snook", "/lvijjedN2HWyaH9DTxNXQ1qv5K9.jpg" },
                    { 428, "Karen Gillan", "/52kqB0Bei1TaTBx2rABrijVhhTG.jpg" },
                    { 427, "Zac Efron", "/6oXNHv7gAyXXYFpF943pKRsTtqQ.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 426, "Blake Lively", "/rkGVjd6wImtgjOCi0IpeffdEWtb.jpg" },
                    { 425, "Mackenzie Davis", "/ekQbEIKh26jbz17P0wwLbo6uNs9.jpg" },
                    { 424, "Ser'Darius Blain", "/4INvD4RYdjGCznboNgdyfWA6dpG.jpg" },
                    { 423, "Natalia Reyes", "/b2Ppir1wahhVZJ5yVTbLAPftGgZ.jpg" },
                    { 422, "Ronda Rousey", "/rwVY20CspTPSuCJ6bJBhXW98LtJ.jpg" },
                    { 421, "Winston Duke", "/MhBiZbryibwuoEtPL9Ns8pYHC1.jpg" },
                    { 420, "Wyatt Russell", "/f759e6y7uhobWRCmD0O21cBmjBA.jpg" },
                    { 419, "Sam Claflin", "/5DtmRlRZc7wPbat1INQPqsxaH4a.jpg" },
                    { 418, "Shia LaBeouf", "/ljlpaXEManszxIcshYQoqo4au03.jpg" },
                    { 417, "Gemma Arterton", "/ntHUKvMHjBjVXX33nycm7zNFYI1.jpg" },
                    { 416, "Stuart Martin", "/qSM4nGc1FyxygdG9YyU4uritqn2.jpg" },
                    { 415, "Karla Souza", "/hHisilQxPxo3vMNc0B8nPmCrGkW.jpg" },
                    { 414, "Amanda Seyfried", "/wcHYErlynY8xWe6X7RmqEqpMBGl.jpg" },
                    { 413, "Cush Jumbo", "/yM3hmPlsSdAFcSUZkeiqs9M9qBf.jpg" },
                    { 412, "Hope Olaide Wilson", "/2ozRgPZPvJy5G9NXnKJ8vXLDTxs.jpg" },
                    { 411, "Ana Ularu", "/ntpeaUMbu6400vmBKUUUkZd26Ge.jpg" },
                    { 410, "Débora Nascimento", "/W0chjQKQbMRBe3WQTfPWUS6D4g.jpg" },
                    { 409, "Dave Franco", "/j48eRArsXapbfXZfw9Fik7PlJSo.jpg" },
                    { 408, "Chris Zylka", "/wxV6WMIdsvwXkMaCqe7WpRE0EM7.jpg" },
                    { 407, "Tom Hopper", "/qS8F31xn6ZoNBTOvcXZfWewgma2.jpg" },
                    { 406, "Luca Marinelli", "/9Tmzfhp9hY6Zouo8KtHcyzuKfdf.jpg" },
                    { 435, "Emma Stone", "/ayqOHTfxAiaSQZisD3Q4fB6UTjU.jpg" },
                    { 436, "Daniel Kaluuya", "/a07Tqzgp0IrW9YkcOQiuKavP4tm.jpg" },
                    { 437, "Harry Melling", "/b0pHwi2MeqxEpeWnF4Llihu53aJ.jpg" },
                    { 438, "Nathalie Emmanuel", "/pbO0ygz2OhCXYql1EnYMGjXBZZr.jpg" },
                    { 468, "Lara Robinson", "/cv4oQY0PSCEmPL82Ez5E4LTq6aA.jpg" },
                    { 467, "Alex Wolff", "/hMhGWS5nB7ZGA3B1aefY39pizgm.jpg" },
                    { 466, "Maisie Williams", "/zLTq39cdRjS43dEzb78c1p1QcbT.jpg" },
                    { 465, "Madison Iseman", "/dsyANGd3zY1aDTeJLKnPxmrY3iy.jpg" },
                    { 464, "Astro", "/dqS3kBv2DpiAMPv5J6ZIl2v3ik3.jpg" },
                    { 463, "Zendaya", "/6TE2AlOUqcrs7CyJiWYgodmee1r.jpg" },
                    { 462, "Jacob Batalon", "/53YhaL4xw4Sb1ssoHkeSSBaO29c.jpg" },
                    { 461, "Tom Holland", "/2qhIDp44cAqP2clOgt2afQI07X8.jpg" },
                    { 460, "Tony Revolori", "/ouuo4ulVO9j6T8JixFp4lWTVdtd.jpg" },
                    { 459, "Ruby O. Fee", "/kz9RRPISTgjXZvJZ9VxjMrH5eET.jpg" },
                    { 458, "Courtney Taylor Burness", "/rOhI4S5EHfQjPBJzmyAEWZe5fRO.jpg" },
                    { 457, "Post Malone", "/iEiu7QhZsqXyBctfr2SlpEuqCZi.jpg" },
                    { 456, "Natacha Karam", "/9lbNoQ6LxPHPqbdIHhXTMHhebrM.jpg" },
                    { 455, "Bill Milner", "/bLgmpSFgEiSFNshqmdl3EIZkRZm.jpg" },
                    { 470, "Morgan Turner", "/oIpJr6lOOwixCGfpcTT42n7VKsO.jpg" },
                    { 454, "Jordan Bolger", "/zGSxXrllgm3MNVT0jjvnAQFacPS.jpg" },
                    { 452, "Scott Haze", "/6cd3Jt8Vo52j8cRKbNf1j7cERhs.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 451, "Brandon Wood", "/6Po8JLGenEbYhs6egrTmSL7vxCQ.jpg" },
                    { 450, "Lucie Guest", "/vIqTpvWUFuYVVwCMMEj4kWe6btj.jpg" },
                    { 449, "Nick Jonas", "/o0BVIpLe8VnCkTuLsk5ObcQmRJr.jpg" },
                    { 448, "Charley Palmer Rothwell", "/vsum3VF3SyL0BxLbR0BGAkiCcyy.jpg" },
                    { 447, "KiKi Layne", "/rJtg17ShRamdfLDDdUZgxtPkyJw.jpg" },
                    { 446, "Ruairi O'Connor", "/abf9bZJgMnpeCNsp18Aj2y80WOc.jpg" },
                    { 445, "Naomi Battrick", "/jZedmlK22j9B5hzjeHfizx9A0gR.jpg" },
                    { 444, "Noémie Nakai", "/gS0BXE5CL7F3TZDxaj8vEQtY0Ym.jpg" },
                    { 443, "Diego Boneta", "/hgEcC28oljaPBYi7ONMToQYMHMA.jpg" },
                    { 442, "Margot Robbie", "/euDPyqLnuwaWMHajcU3oZ9uZezR.jpg" },
                    { 441, "Laura Harrier", "/udfQvYY4SRthaAfykVZhzlOqnLv.jpg" },
                    { 440, "Eiza González", "/w2pZ8gLqZNguj8cqrDGbMw2Ibj0.jpg" },
                    { 439, "Daniel Radcliffe", "/uAICvHxj4cwSGjEY9B09Mhqxrk.jpg" },
                    { 453, "Adrián Alonso", "/6hymcAyezsuTYcIP9P2dDcd5ip5.jpg" },
                    { 269, "Jude Law", "/A6Y0m7qEe04ZTHKyYDLbnyCHNzn.jpg" },
                    { 284, "Stephanie March", "/7iDG2vgajeDQJROkhkVjHYuKS3.jpg" },
                    { 267, "Idris Elba", "/be1bVF7qGX91a6c5WeRPs5pKXln.jpg" },
                    { 98, "Joaquim de Almeida", "/muXJn8kTEPxJaetkgCyS8RPEzTC.jpg" },
                    { 97, "Ned Eisenberg", "/tSpibCDWQuec83tHUhMLjLmyOIa.jpg" },
                    { 96, "Tyler Coppin", "/2SIrr9mHJgPymqpSAVeUWysplCT.jpg" },
                    { 95, "Linda Hamilton", "/7FNn9Z5xkRS9EFbGL2tpmpph9xV.jpg" },
                    { 94, "Tim McInnerny", "/nOLjLixEDo1xFhBmAfRLMKwB9Fv.jpg" },
                    { 93, "Jacek Koman", "/fajWa6UPn9eLne6TjT8zs4VOd7c.jpg" },
                    { 92, "Tom Hanks", "/xndWFsBlClOJFRdhSt4NBwiPq2o.jpg" },
                    { 91, "Keith David", "/jJLJuR7FNHYL1fB5igjj7IXzOel.jpg" },
                    { 90, "Michael Wright", "/nkwS0sH5RH4VJxK8OV8cFdOBJhl.jpg" },
                    { 89, "Bryan Cranston", "/7Jahy5LZX2Fo8fGJltMreAI49hC.jpg" },
                    { 88, "Xander Berkeley", "/5bVZQguLLgWKZhyfA49JNC1r1TW.jpg" },
                    { 87, "Irene Ziegler", "/3elvOYjL0XzIy6ZS9IN5a1XReFz.jpg" },
                    { 86, "Billy Bob Thornton", "/uJBFml6efjg34u2jvT5ugVa1cPI.jpg" },
                    { 85, "Willem Dafoe", "/ui8e4sgZAwMPi3hzEO53jyBJF9B.jpg" },
                    { 84, "Griffin Dunne", "/oZeAznfOHgK1Kvy9TknkQhag1Um.jpg" },
                    { 83, "Julio Oscar Mechoso", "/2m1vtlRlSxozMOoHeobCY2pbrPi.jpg" },
                    { 82, "Richard Schiff", "/cHYHhPvyznOJrw0yEqndhYK2GnQ.jpg" },
                    { 81, "Tomas Arana", "/qMuQWxUQ2sXDiN2d9EDVT5VXHo2.jpg" },
                    { 80, "Jeff Daniels", "/r0mkZJZnTSJO3HJRsMW5HtszxE8.jpg" },
                    { 79, "Kevin Costner", "/bykmxJHLfbFM3NT05RZXhx8YTzF.jpg" },
                    { 78, "J.K. Simmons", "/7kIiPojgSVNRXb5z0hiijcD5LJ6.jpg" },
                    { 77, "Rowan Atkinson", "/kLwplJNfxu46vSpmR7KycXLIy6W.jpg" },
                    { 76, "Denzel Washington", "/cEU2Vrdo83izpGmOvbVAOz5jCof.jpg" },
                    { 75, "Michael Emerson", "/xOpr90SF1RCtjFNTu32nZQ90buY.jpg" },
                    { 74, "Rainer Bock", "/wLn46JXsZDt0pVnheUEWJZ8IvHo.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 73, "Anthony Stewart Head", "/3IKmIaEQFgHtTlUI548eirwIJPP.jpg" },
                    { 72, "Bill Nunn", "/zQbICZKolKAb1ID5pppOm4aFF8p.jpg" },
                    { 71, "Colleen Camp", "/hNAIkUVtsQfpC95BDkXr1lmoI2F.jpg" },
                    { 70, "Alfred Molina", "/nJo91Czesn6z0d0pkfbDoVZY3sg.jpg" },
                    { 99, "Theresa Russell", "/ybCrVitTjAIaoX8LcsYPJ1pwt1G.jpg" },
                    { 100, "Christopher Lambert", "/qKmxieTgzvsA5hSA7w1VoHizmmE.jpg" },
                    { 101, "Richard E. Grant", "/pIwiAEX7LiOgnV7KehM3OVmuG1f.jpg" },
                    { 102, "Joachim Król", "/jF4Mmer6sL54SLj29XKJHR1mrKM.jpg" },
                    { 132, "David Warshofsky", "/qE0vyk9VbkmubP0agH6XsgClwkb.jpg" },
                    { 131, "Temuera Morrison", "/1ckHDFgKXJ8pazmvLCW7DeOKqA0.jpg" },
                    { 130, "David Pasquesi", "/vlXVxJSH6ja8RPf1Bv6UTnFdyhq.jpg" },
                    { 129, "Julianne Moore", "/3YF19rWusxWfEI59ZM33dFhasRq.jpg" },
                    { 128, "Stanley Tucci", "/7wPPKi7djQfNc9NLVJvhBmoZ26U.jpg" },
                    { 127, "BD Wong", "/w7Hs9m6ocS2qlibvrLOvmyCKbAN.jpg" },
                    { 126, "Melora Walters", "/FSxiDBekrKgmzow1j3UhmNHOhI.jpg" },
                    { 125, "Robert John Burke", "/wI16GGKylYjtwVeYs3ui42Ep2Li.jpg" },
                    { 124, "Sean Penn", "/9glqNTVpFpdN1nFklKaHPUyCwR6.jpg" },
                    { 123, "Antonio Banderas", "/iWIUEwgn2KW50MssR7tdPeFoRGW.jpg" },
                    { 122, "Thomas Haden Church", "/VP6VDYL0OEDwSbTRysiJ0kAGxI.jpg" },
                    { 121, "James McGowan", "/oUQCOhUmGiTQRUoeSyRXYlL9VSM.jpg" },
                    { 120, "Tony Goldwyn", "/kLuvuxspqKvR2F8zk3Gc1b0KhkQ.jpg" },
                    { 268, "Gwyneth Paltrow", "/slPWN0VvYJtNOEuxlFSsXSNQMaF.jpg" },
                    { 69, "Ciarán Hinds", "/d8wLIX9VYgwXRGSp1gmUdUxmApv.jpg" },
                    { 118, "Dylan Baker", "/tNifnU13oAn251qT5LRNCJJdhKs.jpg" },
                    { 116, "Catherine Keener", "/n4CTwGszs6cwS1wJRlDQ5Mlh7Ex.jpg" },
                    { 115, "Aidan Quinn", "/oNanwnXr6OApFUa4vaswd6RYVYB.jpg" },
                    { 114, "Clancy Brown", "/9RgzFqbmWBLVfq9wvyDo5UW8VT1.jpg" },
                    { 113, "Tim Robbins", "/hsCu1JUzQQ4pl7uFxAVFLOs9yHh.jpg" },
                    { 112, "Jean-Yves Berteloot", "/x8uFQOAsLSbWcbRMyItUj2nMZuo.jpg" },
                    { 111, "Angela Bassett", "/oe6mXi0K68LWsGwGy6gwfnOu74z.jpg" },
                    { 110, "Fiona Shaw", "/tjM74LcxwnYM77Csg1EtlXb1F9a.jpg" },
                    { 109, "Gary Oldman", "/2v9FVVBUrrkW2m3QOcYkuhq9A6o.jpg" },
                    { 108, "Miranda Richardson", "/hgowM36yQz9oBIq4qNyua2Jkz5K.jpg" },
                    { 107, "Michael Clarke Duncan", "/3RX8OBqt3gbvFwKYZqiom4O3Ta6.jpg" },
                    { 106, "Marc Macaulay", "/89ms2YkIxl3LYOKojcKLTmmI8BB.jpg" },
                    { 105, "Eric Keenleyside", "" },
                    { 104, "Stephen Fry", "/xeheTDmmQDFYaKxEHmyxbjrte4G.jpg" },
                    { 103, "Denis Leary", "/nAqHuIw8z1QodcXdaJQShKogVFa.jpg" },
                    { 117, "Peter Mensah", "/t94TFc6f71AUmZFqdaQfjr7LTRp.jpg" },
                    { 68, "Liam Neeson", "/bboldwqSC6tdw2iL6631c98l2Mn.jpg" },
                    { 67, "Lou Ferrigno", "/obTtRrm8EbDzuiKpLjAd9s1i9v5.jpg" },
                    { 66, "Michael Keaton", "/baeHNv3qrVsnApuKbZXiJOhqMnw.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 31, "John Heard", "/zjhcxrCFK4q0C1gtVmeN8FeqCw0.jpg" },
                    { 30, "Pik-Sen Lim", "/ukr9KwI0ZlLrtyRzKiI3y2YGuSq.jpg" },
                    { 29, "Frances de la Tour", "/aDSge7DWhUyMyA0rEXEZpGiZzGO.jpg" },
                    { 28, "John Kani", "/g7tqg3q128a5O2qXMCwVnXsow9I.jpg" },
                    { 27, "Sam Shepard", "/mVR3Le1rSGIbQmld3Ve42RVFcyI.jpg" },
                    { 26, "Robert De Niro", "/cT8htcckIuyI1Lqwt1CvD02ynTh.jpg" },
                    { 25, "Jürgen Prochnow", "/xjakZgQRw4NXefazNuvQEaGhT1U.jpg" },
                    { 24, "Bruno Ganz", "/8bhS1PObqe8OOVcyIRxV5Rcdufd.jpg" },
                    { 23, "Nick Nolte", "/jpYzFBi6zfn8CHVaXmqgiOTas4V.jpg" },
                    { 22, "Martin Sheen", "/m2Y3Q0uyuW6htrn2W9UWCWMkpZu.jpg" },
                    { 21, "Pedro Armendáriz Jr.", "/e1GdMZPyyqA5wKpoBahqd2mSg47.jpg" },
                    { 20, "James Cromwell", "/vpNQQbM5PtxsYmVm4oh79SGFyUK.jpg" },
                    { 19, "Ian McKellen", "/5cnnnpnJG6TiYUSS7qgJheUZgnv.jpg" },
                    { 18, "Terence Stamp", "/v0htmOknJWTMWmt4DIhZlc0VC7.jpg" },
                    { 32, "Helen Mirren", "/eY26gqv9EGunId7kp32pLueXvz4.jpg" },
                    { 17, "Frank Langella", "/vO2NQUrG2qDtQVWK2IalrFKUYcj.jpg" },
                    { 15, "Morgan Freeman", "/905k0RFzH0Kd6gx8oSxRdnr6FL.jpg" },
                    { 14, "Alan Arkin", "/lTMMpkqL0G3WeFNfbtdP5COZEiX.jpg" },
                    { 13, "James B. Sikking", "/vovQGuc3Lcw6h7xECd2OhBCx78q.jpg" },
                    { 12, "Lynn Cohen", "/gF2YATtRwDbnLB5eG0DGeHFW2QM.jpg" },
                    { 11, "Michael Caine", "/hZruclwEPCKw3e83rnFSIH5sRFZ.jpg" },
                    { 10, "Jean-Pierre Marielle", "/l56lXHVUUO2bMeTjEaB0tzYuW8.jpg" },
                    { 9, "Armin Mueller-Stahl", "/yDT9hMg3osAbiWl5YZXTYG4SmGj.jpg" },
                    { 8, "Robert Culp", "/oKSP6KgD6GuCnI5bYrproZQMXGy.jpg" },
                    { 7, "Paul Soles", "/96fdxpuz3gUUMWhvpPQXrsiUGmh.jpg" },
                    { 6, "Jack Betts", "/f03shMGYcbPG2EyjkIVAR0YA1RA.jpg" },
                    { 5, "Rosemary Harris", "/rpSsXg0tB7wWQMffvvMqLzrvZAj.jpg" },
                    { 4, "Cliff Robertson", "/qB0oEd9KK3ik4fwLoEnqpGj6wmx.jpg" },
                    { 3, "Alethea McGrath", "/9tMGrOn4AcGxlnrsO9NxQeY9JYy.jpg" },
                    { 2, "Earl Cameron", "/jV8eAMdtMZCgwJqmWKdzcl3Wqnm.jpg" },
                    { 16, "Anthony Hopkins", "/9ukJS2QWTJ22HcwR1ktMmoJ6RSL.jpg" },
                    { 133, "Christopher Meloni", "/spEmmtupTNCJB1yeHcs3jov4Keg.jpg" },
                    { 33, "John Lithgow", "/8Y1sjBdnVR483S8PrnAQzlESwhx.jpg" },
                    { 35, "Bob Gunton", "/rr2KDCKK4t0f5YhZibCpLCAsJxc.jpg" },
                    { 65, "Geoffrey Rush", "/t69hkD07olTK8o2CwuNnC1wg5Es.jpg" },
                    { 64, "Stellan Skarsgård", "/x78BtYHElirO7Iw8bL4m8CnzRDc.jpg" },
                    { 63, "Frank C. Turner", "/kvE1I0n9DneoLcMyBJ5VfcIrmE2.jpg" },
                    { 62, "Gerry Becker", "/il1r1Iym5WFJyo8SQon60aqu4nC.jpg" },
                    { 61, "Steven Grives", "" },
                    { 60, "Tom Butler", "/sMDuFSvna90gGV0jkOK7PDzQC8g.jpg" },
                    { 59, "Geraldine James", "/4FMJYeTIUxSE9SwCtnrwJzMsuC3.jpg" },
                    { 58, "William Hurt", "/j3mjmuHLBW4XQSw53C8Sh0Lh3ZQ.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 57, "Jim Knobeloch", "/m6B8YOYzd1YjrnvtOIdy9bzGEEH.jpg" },
                    { 56, "Kate Nelligan", "/a2BUOy9A9WlvTfe8s4gn0MZfPa5.jpg" },
                    { 55, "Bill Nighy", "/acbigDOU1L1vMWAL3Wf0r8h8qLA.jpg" },
                    { 54, "George Harris", "/law9KPIuWHTCMlozP1UMXV5fChs.jpg" },
                    { 53, "Etienne Chicot", "/nZaZ6L1Grd5LVXUGCC4ABuEKZvZ.jpg" },
                    { 52, "Patti LuPone", "/2vYLEpX2xeJnObrSfr1Z57ftkq9.jpg" },
                    { 34, "Henry Winkler", "/8OmkbGkeN7yZj3iIJNo485BBGTC.jpg" },
                    { 51, "David Strathairn", "/fhkvTcrCDPTAclTnE7sqQS1NZKq.jpg" },
                    { 49, "Samuel L. Jackson", "/nCJJ3NVksYNxIzEHcyC1XziwPVj.jpg" },
                    { 48, "Clyde Kusatsu", "/3sYl18ElVAylYKrtKJVJ98Rie2Q.jpg" },
                    { 47, "Jean Reno", "/4TcZEDVA0u6x5pF2oZMuslxZKHe.jpg" },
                    { 46, "Jesper Christensen", "/7GZSh6GABd4OpCOPAJWs1stZAee.jpg" },
                    { 45, "Carlos Carrasco", "/a9SwtLdCPYu8TRdnieWsUrUsilG.jpg" },
                    { 44, "Gerald McRaney", "/wT7WK9T3ZS3tQTbzPzH9RR1m6NR.jpg" },
                    { 43, "William Atherton", "/d4ArFBoywyW3yZ3RuD1KAC0fXiA.jpg" },
                    { 42, "Arnold Schwarzenegger", "/z6IbTtI2FWAVZE6b1V4mqEHjwO6.jpg" },
                    { 41, "Bill Smitrovich", "/yzZUYnAdX0MMA8eZMTVsXufRCfU.jpg" },
                    { 40, "Josh Mostel", "/zX8vyQ9JdWsr1cmPvvyrw01aPiQ.jpg" },
                    { 39, "Christian Steyer", "/mjHNODhlnjheVGrwN2XPGuPay5q.jpg" },
                    { 38, "Sally Field", "/36qWnokCU1VOdSyrmGbTxzGou44.jpg" },
                    { 37, "Tommy Lee Jones", "/zixpaPmOonRh1I3TWgxDkeGxkrv.jpg" },
                    { 36, "Frank Welker", "/xXODQ5AX6pG4my8ieeEIuiAREXs.jpg" },
                    { 50, "Terry Camilleri", "/7snba5wE56wgHLUrASQxZySSm8C.jpg" },
                    { 134, "Tim Roth", "/qSizF2i9gz6c6DbAC5RoIq8sVqX.jpg" },
                    { 119, "Caroline Goodall", "/4cagGtMqACvkuw6Llq8Li8UJ1AR.jpg" },
                    { 136, "Woody Harrelson", "/igxYDQBbTEdAqaJxaW6ffqswmUU.jpg" },
                    { 232, "Tonya Graves", "/aWGl7eG0AO0il5Qx54VAc5qqCmQ.jpg" },
                    { 231, "Christina Cabot", "/h1vwbOfITSvDvDq8E9MVvWqMYSr.jpg" },
                    { 230, "Chris Weitz", "/4HONbwCefKNKBXafRRjXZN00wJE.jpg" },
                    { 229, "Dominic West", "/eD43SR3d1AXsNRATWbeAJ5MWB2e.jpg" },
                    { 228, "Catherine Zeta-Jones", "/9VE0zNIs11aD9BHCKiGAZEIE5c8.jpg" },
                    { 227, "Dominic Fumusa", "/cggOfZTrfQTRfmLJURaPQfk6jdS.jpg" },
                    { 226, "Noah Taylor", "/a9VuohmpqbvcYflOpi0F3ck8L2j.jpg" },
                    { 225, "Jack Black", "/rtCx0fiYxJVhzXXdwZE2XRTfIKE.jpg" },
                    { 224, "Pierfrancesco Favino", "/oLO1lIeWDHvjNTnguOfpjDprxJ8.jpg" },
                    { 223, "Edward Norton", "/5XBzD5WuTyVQZeS4VI25z2moMeY.jpg" },
                    { 222, "Jennifer Lopez", "/pUL1vDXRmQWLyLVOpSiAyYIqgSJ.jpg" },
                    { 221, "Ayelet Zurer", "/ea3MLLgsIdDhDLkjUCmkR0ZxjDC.jpg" },
                    { 220, "Andrew Howard", "/kba1JeCUYHufjB933G5xPRhO8lV.jpg" },
                    { 219, "Anthony Azizi", "/99kIeqvCOvdPhyvogbpV9iYglAE.jpg" },
                    { 135, "Campbell Scott", "/3b9B8Bnqr4rVqIuR9rHkOz2q2ma.jpg" },
                    { 217, "Ben Mendelsohn", "/pA9mu9D2IolVA0v2Yo0tJm6uUyI.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 216, "Hugo Speer", "/qN7t7UVF0B80GXZv6IsdJPKcJFl.jpg" },
                    { 215, "Jennifer Aniston", "/iyMe7Wf4amEkoaTDzjxZysd6zmO.jpg" },
                    { 214, "Jason Bateman", "/8e6mt0vGjPo6eW52gqRuXy5YnfN.jpg" },
                    { 213, "Maurice Compte", "/9PFInf2I0kqjAU0CmZhdDWmHfwT.jpg" },
                    { 212, "Ken Marino", "/7MeXvFGhzBwDm6c7lvdalA3GJYM.jpg" },
                    { 211, "Brennan Brown", "/ulP8XOTkF1EOfZGiyLXMrpkIZzo.jpg" },
                    { 210, "Sidse Babett Knudsen", "/yVkWyBuJaup9I6FIgjZlGkczNNj.jpg" },
                    { 209, "Will Smith", "/6a6cl4ZNufJzrx5HZKWPU1BjjRF.jpg" },
                    { 208, "Gillian Anderson", "/5emeOf49lM2WSs4rc186Wc9Zgs3.jpg" },
                    { 207, "Julian McMahon", "/PirhJFimrT5iK0qru4SzlwLW4G.jpg" },
                    { 206, "Cliff Curtis", "/3D6qz8vL6DWHAO3HeXeaSuwxq3s.jpg" },
                    { 205, "William Houston", "/vaP6uuHsBptUhtZOBA9NkTSmSe4.jpg" },
                    { 204, "Eddie Marsan", "/9atfOgIxhfOKvv2be8HEp6SzOct.jpg" },
                    { 233, "Josh Stamberg", "/h3WKQr0771BfvrDWpqxOVUlZCOm.jpg" },
                    { 234, "Christopher Colquhoun", "/x2SgJAFPe0MOuj5N7LvTE98ZaWs.jpg" },
                    { 235, "Matthew Lillard", "/gXOanRx8ebM5jL9ZN9clKfFlQL0.jpg" },
                    { 236, "Vince Vaughn", "/A9fJ88dfXZGpgFTnQIK0bOtjMrj.jpg" },
                    { 266, "Ben Affleck", "/aTcqu8cI4wMohU17xTdqmXKTGrw.jpg" },
                    { 265, "Ato Essandoh", "/kkQFtsIxVUMuYDrVGeRfX2IG2F8.jpg" },
                    { 264, "Spencer Wilding", "/7sSwsMl9RHVIwewwkdHtTV3kCGn.jpg" },
                    { 263, "John Cho", "/5rg7nhrZnv9fIqnB2V43mCqnKgL.jpg" },
                    { 262, "Dwayne Johnson", "/kuqFzlYMc2IrsOyPznMd1FroeGq.jpg" },
                    { 261, "Jennifer Garner", "/ftymEXqdTnXfaI6dGd9qrJoFOSE.jpg" },
                    { 260, "Sam Hazeldine", "/zyt5yR8hXMA9ZcwtL0yDadwvi4m.jpg" },
                    { 259, "Common", "/dHOcvZJmHz50gk78Eta7PfoZQLH.jpg" },
                    { 258, "Adrian Martinez", "/id70SLEpj9jelZZepJlapaXH8lR.jpg" },
                    { 257, "Sanaa Lathan", "/t7flD6WIv79uslX0Me8dUaCetdA.jpg" },
                    { 256, "Claire Rushbrook", "/7jCBMV5n2HLPDtAIMPXOXNo7Nzh.jpg" },
                    { 255, "David Walliams", "/jC139tWQdQPXJ0PJ7pnXF8Mw2M8.jpg" },
                    { 254, "Victor Alfieri", "/zbdOrUkg0kLdYV3ovohJV3dMBcr.jpg" },
                    { 253, "Mark Wahlberg", "/bTEFpaWd7A6AZVWOqKKBWzKEUe8.jpg" },
                    { 203, "Mark McGrath", "/ocHUamPOg30w0PSOMacrlbwlKlM.jpg" },
                    { 252, "Paul Bettany", "/vcAVrAOZrpqmi37qjFdztRAv1u9.jpg" },
                    { 250, "Mark Consuelos", "/wz06awHQuxEwRiYgFl6f1iGLbJC.jpg" },
                    { 249, "Will Yun Lee", "/zR29E2BHrp6PF7bxD6bVq0nDZXm.jpg" },
                    { 248, "Peter Sarsgaard", "/jOc4VjxPaOkWOqnLCxd8BJy9g5i.jpg" },
                    { 247, "Mido Hamada", "/kpZ4Q7W9G3j75KlfD5hyjQuYNKu.jpg" },
                    { 246, "Ethan Hawke", "/a7rgJl8TYUWAfJuM4fxbLHgD7BL.jpg" },
                    { 245, "Nia Long", "/2HnplqKDWkLyReeeAPsbEctkpPQ.jpg" },
                    { 244, "Jason Butler Harner", "/pSwgbLeEG0MAbCud6RQXmGMAkun.jpg" },
                    { 243, "Matt Damon", "/tffWKAHjuHshb6iQTRal1WXThVX.jpg" },
                    { 242, "Will Forte", "/kphnirb7YggSVEhGI47kACxaIJQ.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 241, "Clifton Collins Jr.", "/ceryVVubF74pgu13Y0KUqIzxOae.jpg" },
                    { 240, "Phillip DeVona", "/rJyn9WVNyDsMO5UeZUIONHx2OBh.jpg" },
                    { 239, "Tristán Ulloa", "/sglKcvdU3e8hTy1kOghEbT0GdHS.jpg" },
                    { 238, "Bobby Cannavale", "/gYQwTbEj5IBPYKLGKgrsNGrWAMl.jpg" },
                    { 237, "Barry Pepper", "/pmdNUqrpsoozh7QYqUgEgZQ69cA.jpg" },
                    { 251, "Ewan McGregor", "/aEmyadfRXTmmR7UW7OXsm5a6smS.jpg" },
                    { 202, "Mark Ruffalo", "/z3dvKqMNDQWk3QLxzumloQVR0pv.jpg" },
                    { 218, "Michael Kelly", "/riyeGgTnSWGZGJ9k9qK38lfclz1.jpg" },
                    { 200, "Julia Roberts", "/4XvEI2AgZ7bNOy1z2Nx8LcwLnTM.jpg" },
                    { 165, "Bill Camp", "/yZFata0EVr7TbIAz8vZFyiDKDts.jpg" },
                    { 164, "Michael Berresse", "" },
                    { 163, "Miguel A. Núñez, Jr.", "/96N3fiIDGfu4yDArkVGfT7rLRvH.jpg" },
                    { 162, "Sebastian Roché", "/cP3RxXiMeMyhhNpacoXZskbcNKa.jpg" },
                    { 161, "Sandra Bullock", "/u2tnZ0L2dwrzFKevVANYT5Pb1nE.jpg" },
                    { 160, "Rebecca Front", "/t0HDaqyqbHAu9xGDVvtwzLmad2e.jpg" },
                    { 159, "Tim Blake Nelson", "/rWuTGiAMaaHIJ30eRkQS23LbRSW.jpg" },
                    { 158, "Djimon Hounsou", "/hco0KMbrxACYTmBfAkSzCf23CXV.jpg" },
                    { 157, "Russell Crowe", "/mGTtPuwE8OR00tkJGmVLJmt8KpW.jpg" },
                    { 156, "Linus Roache", "/u98VM2S9mbUMCMPvCpk2OUn4Eg2.jpg" },
                    { 155, "Nicolas Cage", "/ar33qcWbEgREn07ZpXv5Pbj8hbM.jpg" },
                    { 154, "Brad Pitt", "/oAvLuGuTaNcjY3R5huBQdfrZN6j.jpg" },
                    { 153, "Wendell Pierce", "/uOsldo9Pkl0E79UbIXX5tZZmC8F.jpg" },
                    { 201, "Rufus Sewell", "/yc2EWyg45GO03YqDttaEhjvegiE.jpg" },
                    { 151, "Marc Maron", "/2ENNRs7lgbyLfrUN622zRqkYJWL.jpg" },
                    { 150, "Michael Chiklis", "/pAkKjbzxP6Z6Y5zAGpwmWQo1iji.jpg" },
                    { 149, "Mark Strong", "/3cNmatYsoifytg7TfQhI1EHow3v.jpg" },
                    { 148, "Jason Isaacs", "/nlim5RpNgpNcN0BWhhOCWmaMEHI.jpg" },
                    { 147, "Peggy Lu", "/ng5eaDcOf9kSwIYGNmwF9wEfIHp.jpg" },
                    { 146, "Robert Taylor", "/ltsrqaUynECO6GcdG06Mi1ktkdm.jpg" },
                    { 145, "Michael Gaston", "/ohdf9vJz8IuEY6o53IsRiVOstK0.jpg" },
                    { 144, "Cosimo Fusco", "/tzlLC0hxVspwBTMVB7x6mAuhnXV.jpg" },
                    { 143, "Sebastian Koch", "/3n3BP3FmuFinFokeGx0cHhM4XBH.jpg" },
                    { 142, "Jennifer Jason Leigh", "/7DbG2AO3nygHAkNC866HLPKkxv9.jpg" },
                    { 141, "Denis O'Hare", "/6NlYnzkp8QMfADWRNYNj6xAWes4.jpg" },
                    { 140, "Jim Carrey", "/u0AqTz6Y7GHPCHINS01P7gPvDSb.jpg" },
                    { 139, "Nick Chinlund", "/lRmgWDIXqBTneGbKlJNSFyiis1e.jpg" },
                    { 138, "Jared Harris", "/jAyPWkmge3BqXtgxIG9MfXBzOGj.jpg" },
                    { 137, "Laurence Fishburne", "/8suOhUmPbfKqDQ17jQ1Gy0mI3P4.jpg" },
                    { 166, "Famke Janssen", "/uvZGwNsLqe9NyA57Qlt46IkO8Bd.jpg" },
                    { 167, "Harry Lennix", "/kNGiizWpetf4pyAkINkjkWacmCL.jpg" },
                    { 152, "Michael Beach", "/7gCBCpK2OSzuUWk5iTZds9NjqkF.jpg" },
                    { 169, "Yvan Attal", "/2VaxsiFuad8uHHWTM6Fc71wtNCx.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Actors",
                columns: new[] { "ActorId", "Name", "Profile" },
                values: new object[,]
                {
                    { 168, "Marisa Tomei", "/pP0J79KUzPPjW4QO42iF4KKM7C6.jpg" },
                    { 199, "Ty Burrell", "/zXrrbvW2ZKHYHbhujDj8aBlO4yx.jpg" },
                    { 198, "Jason Statham", "/lldeQ91GwIVff43JBrpdbAAeYWj.jpg" },
                    { 197, "Rhys Ifans", "/g8EUs8r1ECh9plKtrxBparsxlZ1.jpg" },
                    { 196, "Vin Diesel", "/9uxTwqB8anAiPomB6Kqm6A73VTV.jpg" },
                    { 195, "Nicole Kidman", "/dlcNtb7y0Be1pOWdsogowLEsOta.jpg" },
                    { 194, "Steven Mackintosh", "/vDA4mmVe0XMnqd6qMyGWI8bUEeC.jpg" },
                    { 193, "Neil Fanning", "/bOeVV04QAKMNRQocVPNsyFesjth.jpg" },
                    { 192, "Irrfan Khan", "/qkA9PpWJRw3rNjVkWfNZdwLvRZx.jpg" },
                    { 191, "Billy Burke", "/oyPQFn9xYNYvY2yyb2tMOs6ECRb.jpg" },
                    { 190, "Vincent Cassel", "/ykBEiVh6YQ9UmMAYUiQkZBH3VV4.jpg" },
                    { 189, "Fausto Maria Sciarappa", "/rSZfhF5YKMx09Bs8sHdtzKNzIxC.jpg" },
                    { 188, "Jon Favreau", "/8MtRRnEHaBSw8Ztdl8saXiw1egP.jpg" },
                    { 187, "Adam Sandler", "/gLkLCsQdwDDPabRhKPB25nGtKwS.jpg" },
                    { 185, "Dany Boon", "/6jMvseHpFra7tkfDIg64u5pJcI2.jpg" },
                    { 186, "Salma Hayek", "/a1VhN6kvw4tuRrIvGnvAjHAWnD5.jpg" },
                    { 175, "Embeth Davidtz", "/nwsdu9lOsKJ5v9RwOCc7kAiuxSO.jpg" },
                    { 171, "Robert Downey Jr.", "/5qHNjhtjMD4YWH3UP0rm4tKwxCL.jpg" },
                    { 172, "Vincent Regan", "/vnylF0jSWOdQyRWAsQgV3oA9dk.jpg" },
                    { 173, "Mikhail Gorevoy", "/5OqaFZ4cQp8TkRzkxPZ4AIQ3W3y.jpg" },
                    { 174, "Frank Grillo", "/br2nPzelch2Tb3pZHnYAbXng7cz.jpg" },
                    { 184, "Helena Bonham Carter", "/DDeITcCpnBd0CkAIRPhggy9bt5.jpg" },
                    { 176, "James DuMont", "/8DLNFj3a4SJWdtw5daPBQm0qrOO.jpg" },
                    { 170, "Diane Lane", "/o9pPS52JrleScO4Qq6q1nYlaxWz.jpg" },
                    { 177, "Christopher Stollery", "/uLDH142TAlTMans2gXr1asybWrD.jpg" },
                    { 179, "Kyle Chandler", "/fVTorgPgT7pLLkJhIMNoOKdX1mn.jpg" },
                    { 180, "Jeffrey Wright", "/43EGVkmHzZFZQQHW20AL6GivrBD.jpg" },
                    { 181, "Neal McDonough", "/lnNVYkXNhcEcFD3ICtHXNBxmD8i.jpg" },
                    { 182, "Robin Wright", "/3IvlZd2PpT3Tuxy8lr6ymWLyoNU.jpg" },
                    { 183, "Jeffrey Dean Morgan", "/m8bdrmh6ExDCGQ64E83mHg002YV.jpg" },
                    { 178, "Daniel Bernhardt", "/b59qhg5VJOCypx9eMXrXHAjauLd.jpg" }
                });

            migrationBuilder.InsertData(
                table: "Genres",
                columns: new[] { "GenreId", "Name" },
                values: new object[,]
                {
                    { 10, "Romance" },
                    { 11, "Science-Fiction" },
                    { 13, "Western" },
                    { 9, "Mystère" },
                    { 12, "Thriller" },
                    { 8, "Fantastique" },
                    { 1, "Action" },
                    { 6, "Drame" },
                    { 5, "Crime" },
                    { 4, "Comédie" },
                    { 3, "Aventure" }
                });

            migrationBuilder.InsertData(
                table: "Genres",
                columns: new[] { "GenreId", "Name" },
                values: new object[,]
                {
                    { 2, "Animation" },
                    { 7, "Familial" }
                });

            migrationBuilder.InsertData(
                table: "Languages",
                columns: new[] { "LanguageId", "Code", "Name" },
                values: new object[,]
                {
                    { 18, "th", "Thaï" },
                    { 17, "sv", "Suédois" },
                    { 16, "sm", "Samoan" },
                    { 15, "ru", "Russe" },
                    { 14, "pt", "Portugais" },
                    { 13, "nl", "Néerlandais" },
                    { 12, "ms", "Malais" },
                    { 11, "la", "Latin" },
                    { 10, "ja", "Japonais" },
                    { 7, "fi", "Finnois" },
                    { 8, "fr", "Français" },
                    { 6, "es", "Espagnol" },
                    { 5, "en", "Anglais" },
                    { 4, "de", "Allemand" },
                    { 3, "cs", "Tchèque" },
                    { 2, "cn", "Cantonais" },
                    { 1, "ar", "Arabe" },
                    { 19, "tr", "Turc" },
                    { 9, "it", "Italien" },
                    { 20, "zh", "Mandarin" }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 1, 1, "Justice Rosenberg", 9 },
                    { 343, 49, "Quynh", 7 },
                    { 344, 5, "Jade - Associate #2", 10 },
                    { 345, 41, "Charles Cavendish", 2 },
                    { 346, 12, "Zoe Perez", 2 },
                    { 347, 24, "Todd Lancaster", 9 },
                    { 348, 39, "Fridge", 2 },
                    { 342, 19, "Kate Sumner", 3 },
                    { 349, 13, "Diana Wayland", 1 },
                    { 351, 12, "Major William Bowman", 4 },
                    { 351, 52, "Ed Fox", 6 },
                    { 352, 28, "Zack White", 4 },
                    { 353, 5, "Benjamin Danz", 3 },
                    { 354, 20, "Madam Simza Heron", 2 },
                    { 355, 32, "Mia Toretto", 6 },
                    { 350, 29, "Mrs. Stapleton", 4 },
                    { 342, 9, "Nikki Gardner", 3 },
                    { 341, 33, "Li", 8 },
                    { 340, 32, "Roman Pearce", 4 },
                    { 327, 49, "Sebastien Le Livre / Booker", 2 },
                    { 328, 16, "Elizabeth Harris", 2 },
                    { 329, 35, "Christoph Bouchard", 2 },
                    { 330, 20, "Colonel Sebastian Moran", 8 },
                    { 331, 36, "Ellman", 2 },
                    { 332, 49, "Dr. Meta Kozak", 9 },
                    { 333, 2, "Harry Osborn", 3 },
                    { 333, 10, "New Goblin / Harry Osborn", 2 },
                    { 334, 50, "Margot", 4 },
                    { 335, 12, "Agent Toby Grant", 5 },
                    { 336, 55, "Laura", 4 },
                    { 337, 10, "Venom / Eddie Brock", 4 },
                    { 338, 32, "Leticia 'Letty' Ortiz", 3 },
                    { 339, 14, "Della Frye", 2 },
                    { 339, 20, "Irene Adler", 4 },
                    { 356, 54, "Delacroix", 5 },
                    { 357, 45, "Maddie Wachowski", 2 },
                    { 358, 40, "Anne Weying", 1 },
                    { 359, 41, "Maharajah", 8 },
                    { 378, 45, "Wade Whipple", 4 },
                    { 379, 40, "Dr. Dora Skirth", 5 },
                    { 380, 52, "Detective Little", 8 },
                    { 381, 2, "Mary Jane Watson", 2 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 381, 10, "Mary Jane Watson", 1 },
                    { 382, 45, "Agent Stone", 7 },
                    { 383, 53, "Veronika", 8 },
                    { 384, 33, "Lula", 6 },
                    { 385, 42, "Mr. Harrington", 10 },
                    { 386, 17, "Lindy", 2 },
                    { 387, 30, "Kenny Kristo", 1 },
                    { 388, 49, "Keane", 10 },
                    { 389, 25, "Claire", 8 },
                    { 390, 34, "Aaron Kalloor", 5 },
                    { 390, 40, "Carlton Drake / Riot", 2 },
                    { 377, 41, "Juan Carlos Rivera", 10 },
                    { 326, 40, "Dr. Dan Lewis", 4 },
                    { 376, 23, "Melina", 2 },
                    { 374, 28, "Nancy", 3 },
                    { 359, 51, "Lestrade", 5 },
                    { 360, 45, "Rachel", 3 },
                    { 361, 35, "Bertrand Zobrist", 5 },
                    { 362, 9, "William Beachum", 1 },
                    { 363, 38, "Ivan", 8 },
                    { 364, 42, "Quentin Beck / Mysterio", 2 },
                    { 365, 27, "Faora-Ul", 8 },
                    { 366, 38, "Amelia Roussel", 4 },
                    { 367, 10, "Gwen Stacy", 5 },
                    { 368, 54, "Ludwig Dieter", 0 },
                    { 369, 34, "Nicky Parsons", 4 },
                    { 370, 30, "Leila Alvarez", 9 },
                    { 371, 30, "Peter Kristo", 3 },
                    { 372, 45, "Sonic the Hedgehog (voice)", 1 },
                    { 373, 31, "Gareth", 10 },
                    { 375, 23, "Bohemian Nurse", 10 },
                    { 325, 28, "Tom Bowen", 2 },
                    { 324, 40, "Eddie Brock / Venom", 0 },
                    { 323, 32, "Tej Parker", 5 },
                    { 280, 39, "Nigel", 10 },
                    { 281, 30, "Ray", 2 },
                    { 282, 28, "Dr. Fahim Nasir", 8 },
                    { 283, 38, "Rebecca Harr", 6 },
                    { 284, 5, "Julie - Associate #1", 9 },
                    { 285, 27, "General Zod", 2 },
                    { 286, 27, "Lois Lane", 1 },
                    { 286, 52, "Anna Fox", 0 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 287, 17, "Kevin Doyle", 8 },
                    { 288, 19, "Slater", 8 },
                    { 288, 51, "Linthorn", 8 },
                    { 289, 16, "Jones", 8 },
                    { 290, 15, "Chartrand", 7 },
                    { 291, 17, "Eddie Morra", 0 },
                    { 292, 6, "Ferroq", 7 },
                    { 279, 8, "Claire", 10 },
                    { 293, 48, "Officer Jaffe (voice)", 3 },
                    { 278, 14, "Hank", 10 },
                    { 276, 45, "Tom Wachowski", 0 },
                    { 264, 21, "Grannik", 8 },
                    { 265, 34, "Craig Jeffers", 8 },
                    { 266, 14, "Stephen Collins", 1 },
                    { 267, 21, "Moreau", 5 },
                    { 267, 43, "Brixton", 2 },
                    { 268, 37, "Virginia 'Pepper' Potts", 5 },
                    { 269, 20, "Dr. John Watson", 1 },
                    { 270, 28, "Jack Hammond", 7 },
                    { 271, 30, "Jonas Loogan", 4 },
                    { 271, 41, "Sergei", 9 },
                    { 272, 23, "Harry", 4 },
                    { 272, 46, "Driscoll", 5 },
                    { 273, 15, "Assassin", 5 },
                    { 274, 23, "Lori Quaid", 1 },
                    { 275, 32, "Brian O'Conner", 1 },
                    { 277, 47, "Detective Sergeant Agneta Hoglund", 8 },
                    { 391, 44, "Gabriel / REV-9", 4 },
                    { 294, 5, "Jane Smith", 1 },
                    { 296, 2, "Spider-Man / Peter Parker", 0 },
                    { 312, 7, "Sophie Neveu", 1 },
                    { 313, 50, "Elise / Dark Figure", 8 },
                    { 314, 25, "Ernesto", 5 },
                    { 315, 18, "Hal Jordan / Green Lantern", 0 },
                    { 315, 38, "Michael Bryce", 0 },
                    { 315, 53, "Michael Bryce", 0 },
                    { 315, 55, "Adam Reed", 0 },
                    { 316, 2, "Flash Thompson", 7 },
                    { 316, 50, "Leo", 6 },
                    { 317, 29, "Alice", 6 },
                    { 318, 5, "Jasmine", 4 },
                    { 319, 3, "Daphne Blake", 1 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 320, 11, "Betty Ross", 1 },
                    { 321, 49, "Copley", 5 },
                    { 322, 20, "Mary Morstan", 6 },
                    { 311, 16, "Gina", 1 },
                    { 295, 3, "Velma Dinkley", 3 },
                    { 310, 17, "Melissa", 4 },
                    { 308, 21, "Nadya", 2 },
                    { 296, 10, "Spider-Man / Peter Parker", 0 },
                    { 297, 49, "Andromache of Scythia / Andy", 0 },
                    { 298, 18, "Tom Kalmaku", 6 },
                    { 299, 31, "Garriga", 2 },
                    { 300, 35, "Marta Alvarez", 7 },
                    { 301, 17, "Vernon", 5 },
                    { 301, 21, "Ray Carrigan / Blackout", 3 },
                    { 302, 3, "Mary Jane", 5 },
                    { 302, 26, "Henley Reeves", 3 },
                    { 303, 32, "Kiet", 8 },
                    { 304, 3, "Fred Jones", 0 },
                    { 305, 50, "Henry Gibbs", 9 },
                    { 306, 28, "Austin Reilly", 5 },
                    { 307, 5, "Gwen", 8 },
                    { 307, 12, "Rachel Holloman", 1 },
                    { 309, 23, "Douglas Quaid / Hauser", 0 },
                    { 392, 49, "Yusuf Al-Kaysani / Joe", 3 },
                    { 393, 26, "Alma Dray", 5 },
                    { 394, 46, "Cissy Davis", 3 },
                    { 483, 48, "Young Velma (voice)", 2 },
                    { 484, 50, "Lewis", 3 },
                    { 485, 55, "Young Adam", 1 },
                    { 486, 5, "Suzy Coleman", 7 },
                    { 487, 6, "Lupe", 5 },
                    { 488, 13, "Allison", 7 },
                    { 489, 7, "Sister Sandrine", 10 },
                    { 490, 17, "Valerie", 10 },
                    { 491, 8, "Funeral Attendant", 7 },
                    { 492, 52, "Bina", 10 },
                    { 493, 29, "Agent Miles", 3 },
                    { 494, 13, "Grace Koestler", 4 },
                    { 495, 13, "Miss Taylor (1959)", 8 },
                    { 496, 36, "Cutz", 7 },
                    { 497, 43, "Kal", 10 },
                    { 482, 55, "Ray Dollarhyde", 7 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 498, 36, "Police Officer", 10 },
                    { 481, 48, "Young Daphne (voice)", 4 },
                    { 479, 51, "Enola Holmes", 0 },
                    { 464, 30, "TJ", 5 },
                    { 465, 39, "Young Bethany", 7 },
                    { 466, 36, "Lucy Walker", 1 },
                    { 467, 39, "Young Spencer", 9 },
                    { 468, 13, "Lucinda Embry / Abby Wayland", 6 },
                    { 469, 13, "Caleb Koestler", 2 },
                    { 470, 39, "Young Martha", 8 },
                    { 471, 12, "Sam Holloman", 8 },
                    { 472, 52, "Ethan Russell", 2 },
                    { 473, 8, "Megan Hanson", 4 },
                    { 474, 42, "Betty Brant", 8 },
                    { 475, 50, "Clancy", 0 },
                    { 476, 50, "Mim", 2 },
                    { 477, 51, "Lord Tewkesbury", 4 },
                    { 478, 22, "Peter Parker (Age 4)", 6 },
                    { 480, 50, "Kevin", 1 },
                    { 463, 42, "Michelle 'MJ' Jones", 5 },
                    { 499, 16, "Smith", 7 },
                    { 501, 21, "Danny", 9 },
                    { 521, 35, "Dr. Marconi", 8 },
                    { 522, 35, "Florence Hospital Taxi Driver", 9 },
                    { 523, 40, "Lewis Donate", 9 },
                    { 524, 54, "Big Tough Guy", 8 },
                    { 525, 55, "Paul the Bartender", 10 },
                    { 526, 43, "Sefina", 9 },
                    { 527, 44, "Young Grace (10yrs)", 8 },
                    { 528, 54, "Rolph", 4 },
                    { 529, 52, "Olivia Fox", 7 },
                    { 530, 3, "Sugar Ray", 9 },
                    { 531, 53, "Zento", 10 },
                    { 532, 43, "Sam Hobbs", 7 },
                    { 533, 45, "Jojo", 10 },
                    { 534, 44, "Flacco", 6 },
                    { 535, 55, "Chuck", 8 },
                    { 520, 36, "Kelly", 6 },
                    { 500, 19, "Agent Two", 10 },
                    { 519, 36, "Doctor", 9 },
                    { 517, 47, "Pieter Holl", 10 },
                    { 502, 52, "Detective Norelli", 9 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 503, 29, "Miller", 10 },
                    { 504, 44, "Lucas / Floor Guard", 9 },
                    { 505, 19, "Agent One", 9 },
                    { 506, 29, "Nurse", 7 },
                    { 507, 30, "Albert", 7 },
                    { 508, 23, "Resistance Fighter", 8 },
                    { 509, 13, "Principal Clark (1959)", 10 },
                    { 510, 42, "Brad Davis", 9 },
                    { 511, 50, "Baxter / Pizza Guy", 7 },
                    { 512, 34, "Athens Bravo Agent", 6 },
                    { 513, 40, "Dr. Collins", 10 },
                    { 514, 47, "Detective Evert Ridderwall", 9 },
                    { 515, 31, "Gordon", 9 },
                    { 516, 34, "Director NI Edwin Russell", 9 },
                    { 518, 53, "Ailso", 9 },
                    { 263, 23, "McClane", 6 },
                    { 463, 37, "Michelle 'MJ' Jones", 6 },
                    { 462, 37, "Ned", 8 },
                    { 412, 46, "Letitia", 10 },
                    { 413, 47, "Dessie Lombard", 2 },
                    { 414, 48, "Daphne Blake (voice)", 7 },
                    { 415, 50, "Jay", 10 },
                    { 416, 54, "Brad Cage", 3 },
                    { 417, 41, "Grace Ballard", 4 },
                    { 418, 12, "Jerry Shaw", 0 },
                    { 419, 51, "Mycroft Holmes", 2 },
                    { 420, 52, "David Winter", 5 },
                    { 421, 46, "Hawk", 1 },
                    { 422, 32, "Kara", 9 },
                    { 423, 44, "Daniella \"Dani\" Ramos", 3 },
                    { 424, 39, "Young Fridge", 6 },
                    { 425, 44, "Grace", 2 },
                    { 426, 18, "Carol Ferris", 1 },
                    { 411, 35, "Vayentha", 6 },
                    { 427, 48, "Fred Jones (voice)", 6 },
                    { 410, 11, "Martina", 10 },
                    { 409, 26, "Jack Wilder", 7 },
                    { 395, 28, "Gwen", 6 },
                    { 396, 27, "Clark Kent / Superman / Kal-El", 0 },
                    { 396, 51, "Sherlock Holmes", 1 },
                    { 397, 22, "Peter Parker / Spider-Man", 0 },
                    { 398, 37, "Aaron Davis", 7 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 399, 26, "J. Daniel Atlas", 2 },
                    { 399, 33, "J. Daniel Atlas", 0 },
                    { 400, 35, "Sienna Brooks", 1 },
                    { 401, 24, "Katy Bradshaw", 5 },
                    { 403, 34, "Hub Tech", 7 },
                    { 404, 24, "Natalie Barrow", 6 },
                    { 405, 48, "Velma Dinkley (voice)", 0 },
                    { 406, 49, "Nicolò di Genova / Nicky", 4 },
                    { 407, 44, "Hadrell", 10 },
                    { 408, 22, "Flash Thompson", 9 },
                    { 409, 33, "Jack Wilder", 4 },
                    { 462, 42, "Ned Leeds", 6 },
                    { 428, 39, "Martha", 3 },
                    { 430, 51, "Edith", 9 },
                    { 449, 39, "Alex", 4 },
                    { 450, 55, "Young Sorian Body Double", 9 },
                    { 451, 6, "Ricardo", 8 },
                    { 452, 40, "Security Chief Roland Treece", 3 },
                    { 453, 6, "Joaquin", 2 },
                    { 454, 36, "Danny", 4 },
                    { 455, 36, "Tom Harvey", 0 },
                    { 456, 49, "Dizzy", 8 },
                    { 457, 46, "'Squeeb'", 8 },
                    { 458, 8, "Bridgette Hanson", 2 },
                    { 459, 54, "Korina", 2 },
                    { 460, 37, "Eugene 'Flash' Thompson", 10 },
                    { 460, 42, "Eugene 'Flash' Thompson", 7 },
                    { 461, 37, "Peter Parker / Spider-Man", 0 },
                    { 461, 42, "Peter Parker / Spider-Man", 0 },
                    { 448, 36, "Eugene", 5 },
                    { 429, 29, "The Unmarried Mother", 1 },
                    { 447, 49, "Nile Freeman", 1 },
                    { 445, 47, "Marina Haysmith / Sylvia Randolph", 5 },
                    { 431, 55, "Christos", 6 },
                    { 432, 43, "Hattie Shaw", 3 },
                    { 433, 26, "Paris Bank Manager", 9 },
                    { 434, 34, "Heather Lee", 1 },
                    { 435, 22, "Gwen Stacy", 1 },
                    { 436, 19, "Agent Colin Tucker", 4 },
                    { 437, 49, "Merrick", 6 },
                    { 438, 32, "Ramsey", 10 },
                    { 438, 54, "Gwendoline", 1 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 439, 33, "Walter Mabry", 5 },
                    { 440, 43, "Madame M", 5 },
                    { 441, 37, "Liz", 9 },
                    { 442, 31, "Jess Barrett", 1 },
                    { 443, 44, "Diego Ramos", 5 },
                    { 444, 54, "Beatrix", 6 },
                    { 446, 47, "Simon Haysmith / Mac Randolph", 6 },
                    { 262, 43, "Luke Hobbs", 0 },
                    { 402, 54, "Mr. Cool Guy", 10 },
                    { 262, 32, "Luke Hobbs", 2 },
                    { 84, 24, "Sam Lancaster", 10 },
                    { 85, 2, "Green Goblin / Norman Osborn", 1 },
                    { 86, 12, "Thomas Morgan", 6 },
                    { 87, 8, "Mrs. Quinn", 8 },
                    { 88, 9, "Judge Moran", 10 },
                    { 89, 23, "Cohaagen", 3 },
                    { 90, 4, "Marcus", 8 },
                    { 91, 5, "Father", 5 },
                    { 92, 7, "Robert Langdon", 0 },
                    { 92, 15, "Robert Langdon", 0 },
                    { 92, 35, "Robert Langdon", 0 },
                    { 93, 21, "Terrokov", 10 },
                    { 94, 19, "Patch Quartermain", 5 },
                    { 95, 44, "Sarah Connor", 0 },
                    { 96, 29, "Dr. Heinlein", 8 },
                    { 83, 6, "Frey Felipe", 3 },
                    { 98, 38, "Foucher", 5 },
                    { 82, 27, "Dr. Emil Hamilton", 10 },
                    { 81, 17, "Man in Tan Coat", 6 },
                    { 68, 30, "Matthew Scudder", 0 },
                    { 69, 21, "Roarke / The Devil", 1 },
                    { 70, 7, "Bishop Manuel Aringarosa", 5 },
                    { 71, 46, "Betty", 9 },
                    { 72, 2, "Joseph 'Robbie' Robertson", 9 },
                    { 73, 21, "Benedict", 7 },
                    { 74, 16, "Herr Strauss", 9 },
                    { 75, 6, "Harrigan", 9 },
                    { 76, 1, "Gray Grantham", 1 },
                    { 77, 3, "Emile Mondavarious", 4 },
                    { 77, 19, "Johnny English", 0 },
                    { 78, 2, "J. Jonah Jameson", 6 },
                    { 78, 10, "J. Jonah Jameson", 7 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 79, 27, "Jonathan Kent", 5 },
                    { 80, 14, "Senator George Fergus", 6 },
                    { 82, 19, "Titus Fisher", 7 },
                    { 68, 28, "Bill Marks", 0 },
                    { 99, 10, "Emma Marko", 10 },
                    { 101, 38, "Seifert", 7 },
                    { 118, 10, "Dr. Curt Connors", 9 },
                    { 119, 53, "Crowley", 6 },
                    { 120, 1, "Fletcher Cole", 4 },
                    { 121, 23, "Military Adjutant", 9 },
                    { 122, 10, "Sandman / Flint Marko", 3 },
                    { 123, 6, "Don Alejandro de la Vega / Zorro", 0 },
                    { 123, 53, "Aristotle Papdopolous", 3 },
                    { 124, 4, "Tobin Keller", 3 },
                    { 125, 17, "Pierce", 7 },
                    { 126, 40, "Homeless Woman Maria", 6 },
                    { 127, 31, "Liyuan", 6 },
                    { 128, 1, "Khamel", 8 },
                    { 129, 28, "Jen Summers", 1 },
                    { 129, 52, "Jane Russell 1 (Katie)", 3 },
                    { 130, 15, "Claudio Vincenzi", 8 },
                    { 117, 11, "General Joe Greller", 7 },
                    { 100, 21, "Methodius", 4 },
                    { 116, 55, "Maya Sorian", 5 },
                    { 115, 16, "Martin B.", 3 },
                    { 102, 47, "Inspector Klaus Bublitz", 3 },
                    { 103, 22, "Captain Stacy", 3 },
                    { 104, 20, "Mycroft Holmes", 7 },
                    { 105, 4, "Rory Robb", 9 },
                    { 106, 8, "Sheriff Reilly", 6 },
                    { 107, 18, "Kilowog (voice)", 8 },
                    { 108, 36, "Nancy 'Nan' Harvey", 3 },
                    { 109, 38, "Vladislav Dukhovich", 2 },
                    { 109, 52, "Alistair Russell", 1 },
                    { 110, 9, "Judge Robinson", 7 },
                    { 110, 51, "Miss Harrison", 6 },
                    { 111, 18, "Dr. Amanda Waller", 5 },
                    { 112, 7, "Rémy Jean", 7 },
                    { 113, 18, "Senator Hammond", 4 },
                    { 114, 18, "Parallax (voice)", 10 },
                    { 116, 4, "Dot Woods", 4 },
                    { 131, 18, "Abin Sur", 7 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 68, 16, "Dr. Martin Harris", 0 },
                    { 66, 37, "Adrian Toomes / Vulture", 1 },
                    { 16, 9, "Theodore Crawford", 0 },
                    { 17, 16, "Rodney Cole", 5 },
                    { 18, 41, "Malcolm Quince", 3 },
                    { 19, 7, "Sir Leigh Teabing", 2 },
                    { 20, 10, "Captain Stacey", 8 },
                    { 21, 6, "Governor Riley", 10 },
                    { 22, 22, "Uncle Ben", 4 },
                    { 23, 25, "Hurley", 2 },
                    { 24, 16, "Ernst Jürgen", 4 },
                    { 25, 7, "André Vernet", 6 },
                    { 26, 17, "Carl Van Loon", 1 },
                    { 27, 1, "Thomas Callahan", 2 },
                    { 28, 41, "Colonel Ulenga", 7 },
                    { 29, 51, "The Dowager", 7 },
                    { 30, 19, "Killer Cleaner", 6 },
                    { 15, 53, "Senior", 4 },
                    { 31, 1, "Gavin Vereek", 3 },
                    { 15, 33, "Thaddeus Bradley", 3 },
                    { 14, 46, "Henry", 2 },
                    { 262, 39, "Spencer", 0 },
                    { 2, 4, "Dr. Zuwanie", 6 },
                    { 3, 13, "Miss Taylor (2009)", 9 },
                    { 4, 2, "Ben Parker", 4 },
                    { 5, 2, "May Parker", 5 },
                    { 5, 10, "May Parker", 6 },
                    { 6, 2, "Henry Balkan", 10 },
                    { 7, 11, "Stanley", 9 },
                    { 8, 1, "The President", 7 },
                    { 9, 15, "Cardinal Strauss", 6 },
                    { 10, 7, "Jacques Saunière", 9 },
                    { 11, 26, "Arthur Tressler", 8 },
                    { 11, 33, "Arthur Tressler", 7 },
                    { 12, 12, "Mrs. Wierzbowski", 9 },
                    { 13, 1, "FBI Director Denton Voyles", 5 },
                    { 15, 26, "Thaddeus Bradley", 1 },
                    { 67, 11, "Voice of The Incredible Hulk / Security Guard", 8 },
                    { 32, 14, "Cameron Lynne", 3 },
                    { 33, 1, "Smith Keen", 10 },
                    { 51, 9, "Joe Lobruto", 2 },
                    { 52, 25, "Ascension", 10 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 53, 7, "Lt. Collet", 8 },
                    { 54, 4, "Kuman-Kuman", 7 },
                    { 55, 23, "Matthias", 5 },
                    { 56, 8, "Joanne", 5 },
                    { 57, 29, "Dr. Belfort", 5 },
                    { 58, 11, "Thaddeus 'Thunderbolt' Ross", 3 },
                    { 59, 20, "Mrs. Hudson", 9 },
                    { 60, 45, "Vice Chairman Walters", 8 },
                    { 61, 3, "N' Goo Tuana", 10 },
                    { 62, 2, "Maximilian Fargas", 8 },
                    { 63, 45, "Crazy Carl", 9 },
                    { 64, 15, "Commander Richter", 3 },
                    { 65, 18, "Tomar-Re (voice)", 9 },
                    { 50, 13, "Cashier", 5 },
                    { 32, 43, "Queenie Shaw", 4 },
                    { 49, 53, "Darius Kincaid", 1 },
                    { 49, 38, "Darius Kincaid", 1 },
                    { 34, 48, "Keith (voice)", 8 },
                    { 35, 9, "Judge Gardner", 8 },
                    { 36, 48, "Scooby-Doo / Pterodactyl (voice)", 1 },
                    { 37, 34, "Robert Dewey", 2 },
                    { 38, 22, "Aunt May", 5 },
                    { 39, 54, "Hans Wagner", 7 },
                    { 40, 14, "Pete", 9 },
                    { 41, 12, "Admiral Thompson", 10 },
                    { 42, 44, "T-800 / Carl", 1 },
                    { 43, 1, "Bob Gminski", 6 },
                    { 44, 31, "Owens", 3 },
                    { 45, 25, "Norte", 6 },
                    { 46, 4, "Nils Lud", 5 },
                    { 47, 7, "Captain Bezu Fache", 3 },
                    { 48, 4, "Police Chief Lee Wu", 0 },
                    { 49, 42, "Nick Fury", 1 },
                    { 132, 33, "Agent Cowan", 10 },
                    { 97, 17, "Morris Brandt", 9 },
                    { 134, 11, "Emil Blonsky / Abomination", 2 },
                    { 211, 31, "Horst", 7 },
                    { 212, 50, "Glen Finch", 5 },
                    { 213, 30, "Danny Ortiz", 10 },
                    { 214, 14, "Dominic Foy", 5 },
                    { 215, 41, "Audrey Spitz", 1 },
                    { 216, 4, "Simon Broome", 10 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 217, 13, "Phil Bergman", 3 },
                    { 218, 26, "Agent Fuller", 6 },
                    { 219, 12, "Ranim Khalid", 7 },
                    { 220, 17, "Gennady", 3 },
                    { 221, 15, "Vittoria Vetra", 2 },
                    { 222, 25, "Leslie", 1 },
                    { 223, 11, "Bruce Banner / The Hulk", 0 },
                    { 224, 15, "Inspector Olivetti", 4 },
                    { 225, 39, "Bethany", 1 },
                    { 210, 35, "Elizabeth Sinskey", 4 },
                    { 226, 29, "Mr. Robertson", 2 },
                    { 209, 31, "Nicky Spurgeon", 0 },
                    { 207, 8, "Jim Hanson", 1 },
                    { 197, 22, "Dr. Curt Connors / The Lizard", 2 },
                    { 198, 25, "Parker", 0 },
                    { 198, 43, "Deckard Shaw", 1 },
                    { 199, 11, "Dr. Leonard Samson", 5 },
                    { 200, 1, "Darby Shaw", 0 },
                    { 201, 6, "Armand", 6 },
                    { 202, 26, "Dylan Rhodes", 4 },
                    { 202, 33, "Dylan Rhodes", 1 },
                    { 202, 55, "Louis Reed", 2 },
                    { 203, 3, "Sugar Ray", 7 },
                    { 204, 20, "Inspector Lestrade", 5 },
                    { 204, 43, "Professor Andreiko", 6 },
                    { 205, 20, "Constable Clark", 10 },
                    { 206, 9, "Detective Flores", 6 },
                    { 206, 43, "Jonah Hobbs", 8 },
                    { 208, 19, "Pamela Thornton (\"Pegasus\")", 1 },
                    { 227, 31, "Jared", 8 },
                    { 228, 6, "Elena", 1 },
                    { 228, 24, "Cathleen Hostetler", 2 },
                    { 249, 23, "Marek", 7 },
                    { 250, 30, "Reuben Quintana", 6 },
                    { 251, 15, "Camerlengo Patrick McKenna", 1 },
                    { 252, 7, "Silas", 4 },
                    { 253, 24, "Billy Taggart", 0 },
                    { 253, 46, "Spenser", 0 },
                    { 253, 48, "Blue Falcon (voice)", 5 },
                    { 254, 15, "Lieutenant Valenti", 10 },
                    { 255, 41, "Tobey Quince", 5 },
                    { 256, 51, "Mrs. Lane", 10 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 257, 33, "Deputy Director Natalie Austin", 9 },
                    { 258, 31, "Farhad", 4 },
                    { 259, 26, "Evans", 10 },
                    { 260, 38, "Garrett", 9 },
                    { 261, 55, "Ellie Reed", 3 },
                    { 248, 18, "Hector Hammond", 2 },
                    { 247, 16, "Prince Shada", 10 },
                    { 246, 29, "The Bartender", 0 },
                    { 245, 8, "Annie", 3 },
                    { 133, 27, "Colonel Nathan Hardy", 7 },
                    { 230, 5, "Martin Coleman", 6 },
                    { 231, 11, "Major Kathleen Sparr", 6 },
                    { 232, 54, "Basement McGee", 9 },
                    { 233, 9, "Norman Foster", 9 },
                    { 234, 36, "Dr. Bale", 8 },
                    { 235, 3, "Shaggy Rogers", 2 },
                    { 196, 32, "Dominic Toretto", 0 },
                    { 236, 5, "Eddie", 2 },
                    { 238, 39, "Van Pelt", 5 },
                    { 239, 44, "Felipe Gandal", 7 },
                    { 240, 8, "Funeral Attendant", 9 },
                    { 241, 25, "Ross", 4 },
                    { 242, 48, "Shaggy Rogers (voice)", 9 },
                    { 243, 34, "Jason Bourne", 0 },
                    { 244, 28, "Kyle Rice", 9 },
                    { 237, 24, "Jack Valliant", 4 },
                    { 195, 4, "Silvia Broome", 2 },
                    { 229, 19, "Simon Ambrose", 2 },
                    { 193, 3, "Scooby-Doo (voice)", 6 },
                    { 151, 46, "Wayne Cosgrove", 6 },
                    { 152, 24, "Tony Jansen", 7 },
                    { 153, 25, "Carlson", 7 },
                    { 154, 5, "John Smith", 0 },
                    { 155, 13, "John Koestler", 0 },
                    { 155, 21, "Johnny Blaze / Ghost Rider", 0 },
                    { 156, 28, "David McMillan", 10 },
                    { 157, 14, "Cal McAffrey", 0 },
                    { 157, 24, "Nicholas Hostetler", 1 },
                    { 157, 27, "Jor-El", 4 },
                    { 158, 32, "Jakande", 7 },
                    { 159, 11, "Dr. Samuel Sterns", 4 },
                    { 160, 53, "Therapist", 7 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 161, 8, "Linda Hanson", 0 },
                    { 162, 30, "Yuri Landau", 8 },
                    { 150, 25, "Melander", 3 },
                    { 163, 3, "Voodoo Maestro", 8 },
                    { 150, 12, "Defense Secretary Callister", 3 },
                    { 147, 40, "Mrs. Chen", 8 },
                    { 135, 22, "Richard Parker", 7 },
                    { 194, 47, "Detective Inspector Rupert Pierce", 4 },
                    { 136, 26, "Merritt McKinney", 0 },
                    { 136, 33, "Merritt McKinney / Chase McKinney", 2 },
                    { 136, 40, "Cletus Kasady / Carnage", 7 },
                    { 137, 27, "Perry White", 6 },
                    { 138, 20, "Professor James Moriarty", 3 },
                    { 139, 6, "Jacob McGivens", 4 },
                    { 140, 45, "Dr. Robotnik", 6 },
                    { 141, 47, "Simon Haysmith", 7 },
                    { 142, 52, "Jane Russell 2", 4 },
                    { 143, 16, "Professor Leo Bressler", 6 },
                    { 144, 15, "Father Simeon", 9 },
                    { 145, 46, "Captain Boylan", 4 },
                    { 146, 31, "McEwen", 5 },
                    { 148, 48, "Dick Dastardly (voice)", 10 },
                    { 164, 14, "Robert Bingham", 7 },
                    { 149, 18, "Sinestro", 3 },
                    { 166, 47, "Valerie Kanon", 1 },
                    { 182, 14, "Anne Collins", 4 },
                    { 183, 47, "Jacob Kanon", 0 },
                    { 184, 51, "Eudoria Holmes", 3 },
                    { 185, 41, "Inspector Laurent de la Croix", 6 },
                    { 186, 38, "Sonia Kincaid", 3 },
                    { 186, 53, "Sonia Kincaid", 2 },
                    { 187, 41, "Nicholas 'Nick' Spitz", 0 },
                    { 188, 37, "Harold 'Happy' Hogan", 4 },
                    { 188, 42, "Harold 'Happy' Hogan", 4 },
                    { 189, 35, "Parker", 10 },
                    { 190, 34, "Asset", 3 },
                    { 191, 9, "Lt. Rob Nunally", 5 },
                    { 165, 34, "Malcolm Smith", 10 },
                    { 192, 35, "Harry Sims", 3 },
                    { 192, 22, "Rajit Ratha", 10 },
                    { 180, 24, "Carl Fairbanks", 3 },
                    { 179, 24, "Paul Andrews", 8 }
                });

            migrationBuilder.InsertData(
                table: "MovieCast",
                columns: new[] { "ActorId", "MovieId", "Character", "Order" },
                values: new object[,]
                {
                    { 181, 45, "Major Bennington", 5 },
                    { 178, 25, "Kroll", 9 },
                    { 167, 14, "Det. Donald Bell", 8 },
                    { 167, 27, "General Calvin Swanwick", 9 },
                    { 168, 37, "May Parker", 3 },
                    { 168, 42, "May Parker", 3 },
                    { 169, 4, "Philippe", 1 },
                    { 170, 27, "Martha Kent", 3 },
                    { 171, 37, "Tony Stark / Iron Man", 2 },
                    { 172, 21, "Toma Nikasevic", 6 },
                    { 171, 20, "Sherlock Holmes", 0 },
                    { 174, 53, "Bobby O'Neill", 5 },
                    { 175, 9, "Jennifer Crawford", 4 },
                    { 175, 22, "Mary Parker", 8 },
                    { 176, 46, "Bentwood", 7 },
                    { 177, 29, "The Interviewer", 9 },
                    { 173, 38, "Livitin", 10 }
                });

            migrationBuilder.InsertData(
                table: "MovieGenre",
                columns: new[] { "GenreId", "MovieId" },
                values: new object[,]
                {
                    { 9, 12 },
                    { 9, 8 },
                    { 9, 13 },
                    { 9, 14 },
                    { 9, 16 },
                    { 9, 7 },
                    { 9, 15 },
                    { 9, 17 },
                    { 10, 31 },
                    { 9, 28 },
                    { 9, 30 },
                    { 9, 35 },
                    { 9, 51 },
                    { 9, 52 },
                    { 9, 3 },
                    { 11, 11 },
                    { 11, 13 },
                    { 9, 20 },
                    { 9, 1 },
                    { 6, 30 },
                    { 8, 39 },
                    { 6, 5 },
                    { 11, 17 },
                    { 6, 8 },
                    { 6, 14 }
                });

            migrationBuilder.InsertData(
                table: "MovieGenre",
                columns: new[] { "GenreId", "MovieId" },
                values: new object[,]
                {
                    { 6, 24 },
                    { 6, 31 },
                    { 6, 35 },
                    { 6, 37 },
                    { 6, 47 },
                    { 6, 52 },
                    { 7, 45 },
                    { 7, 48 },
                    { 7, 50 },
                    { 8, 2 },
                    { 8, 10 },
                    { 8, 21 },
                    { 8, 22 },
                    { 8, 49 },
                    { 11, 18 },
                    { 12, 38 },
                    { 11, 27 },
                    { 12, 21 },
                    { 12, 23 },
                    { 12, 24 },
                    { 12, 26 },
                    { 12, 28 },
                    { 12, 29 },
                    { 12, 30 },
                    { 12, 32 },
                    { 12, 33 },
                    { 12, 34 },
                    { 12, 35 },
                    { 12, 46 },
                    { 12, 47 },
                    { 12, 52 },
                    { 12, 53 },
                    { 13, 6 },
                    { 6, 1 },
                    { 12, 19 },
                    { 12, 18 },
                    { 12, 17 },
                    { 12, 16 },
                    { 11, 29 },
                    { 11, 36 },
                    { 11, 37 },
                    { 11, 40 }
                });

            migrationBuilder.InsertData(
                table: "MovieGenre",
                columns: new[] { "GenreId", "MovieId" },
                values: new object[,]
                {
                    { 11, 42 },
                    { 11, 44 },
                    { 11, 45 },
                    { 11, 55 },
                    { 11, 23 },
                    { 12, 1 },
                    { 12, 5 },
                    { 12, 7 },
                    { 12, 8 },
                    { 12, 9 },
                    { 12, 12 },
                    { 12, 13 },
                    { 12, 14 },
                    { 12, 15 },
                    { 12, 4 },
                    { 5, 54 },
                    { 1, 21 },
                    { 5, 51 },
                    { 1, 37 },
                    { 1, 38 },
                    { 1, 39 },
                    { 1, 40 },
                    { 1, 42 },
                    { 1, 43 },
                    { 1, 44 },
                    { 1, 45 },
                    { 1, 46 },
                    { 1, 49 },
                    { 1, 50 },
                    { 1, 53 },
                    { 1, 55 },
                    { 2, 48 },
                    { 3, 3 },
                    { 3, 6 },
                    { 3, 10 },
                    { 1, 36 },
                    { 3, 11 },
                    { 1, 35 },
                    { 1, 33 },
                    { 5, 52 },
                    { 1, 5 },
                    { 1, 6 }
                });

            migrationBuilder.InsertData(
                table: "MovieGenre",
                columns: new[] { "GenreId", "MovieId" },
                values: new object[,]
                {
                    { 1, 10 },
                    { 1, 11 },
                    { 1, 12 },
                    { 1, 13 },
                    { 1, 16 },
                    { 1, 18 },
                    { 1, 19 },
                    { 1, 20 },
                    { 1, 22 },
                    { 1, 23 },
                    { 1, 25 },
                    { 1, 27 },
                    { 1, 28 },
                    { 1, 32 },
                    { 1, 34 },
                    { 3, 18 },
                    { 1, 2 },
                    { 3, 20 },
                    { 4, 45 },
                    { 4, 46 },
                    { 4, 48 },
                    { 4, 53 },
                    { 4, 54 },
                    { 4, 55 },
                    { 5, 1 },
                    { 5, 4 },
                    { 5, 19 },
                    { 5, 20 },
                    { 5, 24 },
                    { 5, 25 },
                    { 5, 26 },
                    { 5, 30 },
                    { 5, 31 },
                    { 5, 32 },
                    { 3, 19 },
                    { 4, 43 },
                    { 4, 41 },
                    { 5, 38 },
                    { 4, 38 },
                    { 4, 39 },
                    { 3, 22 },
                    { 3, 23 }
                });

            migrationBuilder.InsertData(
                table: "MovieGenre",
                columns: new[] { "GenreId", "MovieId" },
                values: new object[,]
                {
                    { 3, 27 },
                    { 3, 32 },
                    { 3, 37 },
                    { 3, 42 },
                    { 3, 43 },
                    { 3, 39 },
                    { 3, 48 },
                    { 3, 51 },
                    { 3, 55 },
                    { 4, 3 },
                    { 4, 5 },
                    { 4, 19 },
                    { 4, 31 },
                    { 4, 33 },
                    { 3, 44 }
                });

            migrationBuilder.InsertData(
                table: "MovieLanguage",
                columns: new[] { "LanguageId", "MovieId", "IsOriginalLanguage" },
                values: new object[,]
                {
                    { 8, 30, false },
                    { 8, 25, false },
                    { 8, 26, false },
                    { 8, 27, false },
                    { 8, 28, false },
                    { 8, 29, false },
                    { 8, 31, false },
                    { 8, 40, false },
                    { 8, 33, false },
                    { 8, 34, false },
                    { 8, 35, false },
                    { 8, 36, false },
                    { 8, 37, false },
                    { 8, 38, false },
                    { 8, 39, false },
                    { 8, 32, false },
                    { 8, 24, false },
                    { 8, 15, false },
                    { 8, 22, false },
                    { 8, 41, false },
                    { 8, 5, false },
                    { 8, 6, false },
                    { 8, 7, false },
                    { 8, 8, false },
                    { 8, 9, false },
                    { 8, 10, false },
                    { 8, 11, false }
                });

            migrationBuilder.InsertData(
                table: "MovieLanguage",
                columns: new[] { "LanguageId", "MovieId", "IsOriginalLanguage" },
                values: new object[,]
                {
                    { 8, 12, false },
                    { 8, 13, false },
                    { 8, 14, false },
                    { 8, 16, false },
                    { 8, 17, false },
                    { 8, 18, false },
                    { 8, 19, false },
                    { 8, 20, false },
                    { 8, 21, false },
                    { 8, 23, false },
                    { 8, 4, false },
                    { 10, 53, false },
                    { 8, 43, false },
                    { 14, 4, false },
                    { 14, 11, false },
                    { 15, 17, false },
                    { 15, 19, false },
                    { 15, 38, false },
                    { 15, 43, false },
                    { 15, 47, false },
                    { 13, 47, false },
                    { 15, 49, false },
                    { 17, 47, false },
                    { 18, 32, false },
                    { 19, 16, false },
                    { 20, 15, false },
                    { 20, 17, false },
                    { 20, 19, false },
                    { 8, 3, false },
                    { 16, 43, false },
                    { 13, 42, false },
                    { 12, 40, false },
                    { 11, 15, false },
                    { 8, 44, false },
                    { 8, 45, false },
                    { 8, 46, false },
                    { 8, 47, false },
                    { 8, 48, false },
                    { 8, 49, false },
                    { 8, 50, false },
                    { 8, 51, false },
                    { 8, 52, false }
                });

            migrationBuilder.InsertData(
                table: "MovieLanguage",
                columns: new[] { "LanguageId", "MovieId", "IsOriginalLanguage" },
                values: new object[,]
                {
                    { 8, 53, false },
                    { 8, 54, false },
                    { 8, 55, false },
                    { 9, 15, false },
                    { 9, 17, false },
                    { 9, 42, false },
                    { 9, 49, false },
                    { 11, 7, false },
                    { 8, 42, false },
                    { 8, 2, false },
                    { 5, 24, true },
                    { 7, 47, false },
                    { 5, 5, true },
                    { 5, 6, true },
                    { 5, 7, true },
                    { 5, 8, true },
                    { 5, 9, true },
                    { 5, 10, true },
                    { 5, 11, true },
                    { 5, 4, true },
                    { 5, 12, true },
                    { 5, 14, true },
                    { 5, 15, true },
                    { 5, 16, true },
                    { 5, 17, true },
                    { 5, 18, true },
                    { 5, 19, true },
                    { 5, 20, true },
                    { 5, 13, true },
                    { 5, 21, true },
                    { 5, 3, true },
                    { 5, 1, true },
                    { 20, 33, false },
                    { 1, 16, false },
                    { 1, 32, false },
                    { 1, 49, false },
                    { 2, 14, false },
                    { 2, 19, false },
                    { 2, 33, false },
                    { 5, 2, true },
                    { 3, 42, false },
                    { 4, 15, false }
                });

            migrationBuilder.InsertData(
                table: "MovieLanguage",
                columns: new[] { "LanguageId", "MovieId", "IsOriginalLanguage" },
                values: new object[,]
                {
                    { 4, 16, false },
                    { 4, 19, false },
                    { 4, 28, false },
                    { 4, 42, false },
                    { 4, 47, false },
                    { 4, 54, false },
                    { 3, 54, false },
                    { 5, 22, true },
                    { 5, 23, true },
                    { 5, 25, true },
                    { 5, 47, true },
                    { 5, 48, true },
                    { 5, 49, true },
                    { 5, 50, true },
                    { 5, 51, true },
                    { 5, 52, true },
                    { 5, 53, true },
                    { 5, 46, true },
                    { 5, 54, true },
                    { 6, 5, false },
                    { 6, 6, false },
                    { 6, 7, false },
                    { 6, 11, false },
                    { 6, 32, false },
                    { 6, 44, false },
                    { 6, 46, false },
                    { 5, 55, true },
                    { 5, 45, true },
                    { 5, 44, true },
                    { 5, 43, true },
                    { 5, 26, true },
                    { 5, 27, true },
                    { 5, 28, true },
                    { 5, 29, true },
                    { 5, 30, true },
                    { 5, 31, true },
                    { 5, 32, true },
                    { 5, 33, true },
                    { 5, 34, true },
                    { 5, 35, true },
                    { 5, 36, true },
                    { 5, 37, true }
                });

            migrationBuilder.InsertData(
                table: "MovieLanguage",
                columns: new[] { "LanguageId", "MovieId", "IsOriginalLanguage" },
                values: new object[,]
                {
                    { 5, 38, true },
                    { 5, 39, true },
                    { 5, 40, true },
                    { 5, 41, true },
                    { 5, 42, true },
                    { 8, 1, false },
                    { 20, 40, false }
                });

            migrationBuilder.CreateIndex(
                name: "IX_MovieCast_ActorId",
                table: "MovieCast",
                column: "ActorId");

            migrationBuilder.CreateIndex(
                name: "IX_MovieGenre_GenreId",
                table: "MovieGenre",
                column: "GenreId");

            migrationBuilder.CreateIndex(
                name: "IX_MovieLanguage_LanguageId",
                table: "MovieLanguage",
                column: "LanguageId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "MovieCast");

            migrationBuilder.DropTable(
                name: "MovieGenre");

            migrationBuilder.DropTable(
                name: "MovieLanguage");

            migrationBuilder.DropTable(
                name: "Actors");

            migrationBuilder.DropTable(
                name: "Genres");

            migrationBuilder.DropTable(
                name: "Languages");
        }
    }
}
